{"version":3,"sources":["game/def.ts","game/util.ts","store/game/init.ts","store/game/selectors.ts","store/index.ts","store/game/reducers.ts","store/game/actions.ts","styles.tsx","logo/Logo.tsx","logo/Loading.tsx","navigation/UpperMenu.tsx","navigation/MenuItem.tsx","navigation/LowerMenu.tsx","logo/NavigationLogo.tsx","navigation/Navigation.tsx","game/svg/Line.tsx","game/Dot.tsx","game/Board.tsx","game/MoveList.tsx","game/TurnInfo.tsx","game/Game.tsx","pages/Home.tsx","pages/Settings.tsx","Content.tsx","App.tsx","index.tsx"],"names":["Player","getSVGPosition","_ref","x","y","getKeyFromPosition","_ref2","concat","getKeyFromPath","_ref3","_ref4","Object","slicedToArray","a","b","position","initField","name","String","fromCharCode","initFields","flatMap","toConsumableArray","map","range","initBordersAndPaths","fields","partition","field","_field$position","filter","maybeNearest","includes","path","pathString","isBehindGatePath","nearestField","_ref5","isBorder","initState","_initBordersAndPaths","_initBordersAndPaths2","borders","paths","turns","player","WHITE","moves","size","initialState","getMoves","state","turn","getCenterField","find","f","getCurrentField","createSelector","length","Error","lastMove","direction","getCurrentTurn","getAllPathsWithCurrentField","currentField","getUsedPathsWithCurrentField","getPossibleMoveFields","allPathsWithCurrentField","usedPathsWithCurrentField","difference","reducers","combineReducers","game","arguments","undefined","action","type","payload","thisTurn","objectSpread","move","p","slice","nextTurn","BLACK","lastTurn","prevTurn","store","createStore","devToolsEnhancer","Global","createGlobalStyle","_templateObject","FullPage","styled","div","_templateObject2","_templateObject3","colors","background","logo","Wrapper","animated","Logo_templateObject","LogoContainer","Logo_templateObject2","Logo","toggle","onAnimationFinish","width","_useState","useState","_useState2","id","setId","useEffect","uniqueId","farTrailRef","useRef","farTrailProps","useSpring","from","to","ref","closeTrailRef","closeTrailProps","ballRef","ballProps","fillOpacity","onRest","useChain","current","react_default","createElement","web","svg","viewBox","x1","y1","x2","y2","offset","stopColor","stopOpacity","maskUnits","rect","height","fill","style","d","mask","defaultProps","styleColors","Loading_templateObject","Loading","setToggle","textProps","opacity","Loading_Wrapper","logo_Logo","key","Styled","UpperMenu_templateObject","UserName","span","UpperMenu_templateObject2","MenuIcon","UpperMenu_templateObject3","UpperMenu","setMenuOpen","onClick","StyledMenuItem","MenuItem_templateObject","MenuItem","label","react_router_dom","LowerMenu_templateObject","menuItems","withRouter","hideMenu","location","currentMenuItems","useMemo","pathname","trail","useTrail","LowerMenu_Styled","index","objectWithoutProperties","transform","interpolate","n","marginRight","navigation_MenuItem","assign","NavigationLogo_templateObject","NavigationLogo","NavigationLogo_LogoContainer","Shade","Navigation_templateObject","isMenuOpen","isHome","Fragment","logo_NavigationLogo","navigation_UpperMenu","navigation_LowerMenu","memo","_ref$color","color","_useMemo","_useMemo2","pointerEvents","stroke","connect","isValidMove","dispatch","addMove","addMoveAction","_ref$position","hover","setHover","isCurrent","_getSVGPosition","svgX","svgY","r","cx","cy","onMouseEnter","onMouseLeave","svg_Line","currentTurn","props","_props$size","border","game_Dot","revertMove","revertTurn","JSON","stringify","_ref$turn","Game","maxWidth","marginLeft","overflowY","game_Board","game_TurnInfo","game_MoveList","Home","_useSpring","xy","_useSpring2","spring","set","handle","clientX","clientY","window","innerWidth","innerHeight","addEventListener","removeEventListener","Settings","textAlign","useTransition","l","enter","leave","item","react_router","component","App","showGame","setShowGame","es","basename","process","navigation_Navigation","src_Content","logo_Loading","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.10d85043.chunk.js","sourcesContent":["// Lineball - (domain) game interfaces definition\n\nexport interface Size {\n  x: number;\n  y: number;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Field {\n  name: string;\n  position: Position;\n}\n\nexport type Path = [Field, Field];\n\nexport enum Player {\n  WHITE,\n  BLACK\n}\n\nexport interface Move {\n  path: Path;\n  direction: 0 | 1;\n}\n\nexport interface Turn {\n  player: Player;\n  moves: Move[];\n}\n","import { Path, Position } from './def';\n\nexport const getSVGPosition = ({ x, y }: Position): Position => ({\n  x: x * 10 + 5,\n  y: y * 10\n});\n\nexport const getKeyFromPosition = ({ x, y }: Position): string => `${x}_${y}`;\nexport const getKeyFromPath = ([a, b]: Path): string =>\n  `${getKeyFromPosition(a.position)}:${getKeyFromPosition(b.position)}`;\n","import { GameState } from './reducers';\nimport { flatMap, partition, range } from 'lodash';\nimport { Field, Path, Player, Position, Turn } from '../../game/def';\nimport { getKeyFromPath } from '../../game/util';\n\nconst initField = ({ x, y }: Position): Field => ({\n  name: `${String.fromCharCode(65 + y)}${x}`,\n  position: { x, y }\n});\n\nconst initFields = (): Field[] =>\n  flatMap([\n    ...[0, 12].map((y): Field[] => range(3, 6).map((x): Field => initField({ x, y }))),\n    ...range(1, 12).map((y): Field[] => range(0, 9).map((x): Field => initField({ x, y })))\n  ]);\n\nconst isBorder = ([a, b]: [Position, Position]): boolean => {\n  // horizontal\n  if (a.y === b.y) {\n    if ([0, 12].includes(a.y)) {\n      return true;\n    }\n    if ([1, 11].includes(a.y) && (a.x < 3 || a.x >= 5)) {\n      return true;\n    }\n  }\n  // vertical\n  else if (a.x === b.x) {\n    if ([0, 8].includes(a.x)) {\n      return true;\n    }\n    if ([3, 5].includes(a.x) && [0, 11].includes(a.y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isBehindGatePath = (path: Path): boolean => {\n  const pathString = getKeyFromPath(path);\n  return ['5_0:6_1', '3_0:2_1', '6_11:5_12', '2_11:3_12'].includes(pathString);\n};\n\nconst initBordersAndPaths = (fields: Field[]): [Path[], Path[]] =>\n  partition(\n    flatMap(\n      fields.map(\n        (field): Path[] => {\n          const { x, y } = field.position;\n          const nearestFieldsWithGreaterPosition = fields.filter(\n            (maybeNearest): boolean =>\n              (([x, x + 1].includes(maybeNearest.position.x) && [y, y + 1].includes(maybeNearest.position.y)) ||\n                (maybeNearest.position.x === x - 1 && maybeNearest.position.y === y + 1)) &&\n              maybeNearest.name !== field.name &&\n              !isBehindGatePath([field, maybeNearest])\n          );\n          return nearestFieldsWithGreaterPosition.map((nearestField): Path => [field, nearestField]);\n        }\n      )\n    ),\n    ([a, b]): boolean => isBorder([a.position, b.position])\n  );\n\nconst initTurns = (): Turn[] => [\n  {\n    player: Player.WHITE,\n    moves: []\n  }\n];\n\nconst initState = (): GameState => {\n  const fields = initFields();\n  const [borders, paths] = initBordersAndPaths(fields);\n  return {\n    fields,\n    paths,\n    borders,\n    turns: initTurns(),\n    size: {\n      x: 9,\n      y: 12\n    }\n  };\n};\nexport const initialState: GameState = initState();\n\nexport const testOnly = {\n  initState,\n  initFields,\n  initBordersAndPaths\n};\n","import { GameState } from './reducers';\nimport { Field, Move, Path, Turn } from '../../game/def';\nimport { createSelector } from 'reselect';\nimport { difference } from 'lodash';\n\nexport const getMoves = (state: GameState): Move[] => state.turns.flatMap((turn): Move[] => turn.moves);\nconst getFields = (state: GameState): Field[] => state.fields;\nconst getPaths = (state: GameState): Path[] => state.paths;\nconst getTurns = (state: GameState): Turn[] => state.turns;\n\nconst getCenterField = (fields: Field[]): Field | undefined =>\n  fields.find((f): boolean => f.position.x === 4 && f.position.y === 6);\n\nexport const getCurrentField = createSelector(\n  [getMoves, getFields],\n  (moves, fields): Field => {\n    if (moves.length === 0) {\n      const find = getCenterField(fields);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return find;\n    }\n    if (moves.length === 1) {\n      const find = getCenterField(fields);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return moves[0].path[0] === find ? moves[0].path[1] : moves[0].path[0];\n    }\n\n    const lastMove = moves[moves.length - 1];\n    return lastMove.path[lastMove.direction];\n  }\n);\n\nexport const getCurrentTurn = createSelector(\n  [getTurns],\n  (turns): Turn => {\n    if (!turns.length) {\n      throw new Error('Error getting current turn');\n    }\n    return turns[turns.length - 1];\n  }\n);\n\nexport const getAllPathsWithCurrentField = createSelector(\n  [getCurrentField, getPaths],\n  (currentField, paths): Path[] => paths.filter((f): boolean => f.includes(currentField))\n);\n\nexport const getUsedPathsWithCurrentField = createSelector(\n  [getMoves, getCurrentField],\n  (moves, currentField): Path[] =>\n    moves.filter(({ path }): boolean => path.includes(currentField)).map(({ path }): Path => path)\n);\n\nexport const getPossibleMoveFields = createSelector(\n  [getCurrentField, getAllPathsWithCurrentField, getUsedPathsWithCurrentField],\n  (currentField, allPathsWithCurrentField, usedPathsWithCurrentField): Field[] => {\n    return difference(allPathsWithCurrentField, usedPathsWithCurrentField).map(\n      ([a, b]): Field => (a === currentField ? b : a)\n    );\n  }\n);\n","import { Action as ReduxAction, combineReducers, createStore, Store as ReduxStore } from 'redux';\nimport game, { GameState } from './game/reducers';\n\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nexport interface Store extends ReduxStore {\n  game: GameState;\n}\n\nexport interface Action extends ReduxAction {\n  type: string;\n}\n\nconst reducers = combineReducers({\n  game\n});\n\nconst store: Store = createStore(reducers, devToolsEnhancer({}));\n\nexport default store;\n","import { ADD_MOVE, AddMoveAction, REVERT_MOVE, REVERT_TURN } from './actions';\nimport { Action } from '../index';\nimport { Field, Move, Path, Player, Size, Turn } from '../../game/def';\nimport { initialState } from './init';\nimport { getCurrentField, getCurrentTurn } from './selectors';\n\nexport interface GameState {\n  fields: Field[];\n  size: Size;\n  paths: Path[];\n  borders: Path[];\n  turns: Turn[];\n}\n\nexport default (state: GameState = initialState, action: Action): GameState => {\n  switch (action.type) {\n    case ADD_MOVE: {\n      const { payload: field } = action as AddMoveAction;\n      const currentField = getCurrentField(state);\n      const path = state.paths.find((f): boolean => f.includes(field) && f.includes(currentField));\n      if (!path) {\n        throw new Error('Path not found!');\n      }\n      const direction = path[0] === field ? 0 : 1;\n      const thisTurn: Turn = {\n        ...state.turns[state.turns.length - 1],\n        moves: [...state.turns[state.turns.length - 1].moves, { path, direction }]\n      };\n      // is same turn\n      const isSameTurn = !!state.turns\n        .flatMap((turn): Move[] => turn.moves)\n        .map((move): Path => move.path)\n        .concat(state.borders)\n        .filter((p: Path): boolean => p.includes(field)).length;\n      if (isSameTurn) {\n        return {\n          ...state,\n          turns: [...state.turns.slice(0, -1), thisTurn]\n        };\n      }\n      const nextTurn: Turn = {\n        moves: [],\n        player: getCurrentTurn(state).player === Player.WHITE ? Player.BLACK : Player.WHITE\n      };\n      return {\n        ...state,\n        turns: [...state.turns.slice(0, -1), thisTurn, nextTurn]\n      };\n    }\n    case REVERT_MOVE: {\n      const lastTurn = state.turns[state.turns.length - 1];\n      if (lastTurn.moves.length > 0) {\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -1),\n            {\n              ...lastTurn,\n              moves: [...lastTurn.moves.slice(0, -1)]\n            }\n          ]\n        };\n      }\n      return {\n        ...state\n      };\n    }\n    case REVERT_TURN: {\n      if (state.turns.length > 2) {\n        const currentTurn = state.turns[state.turns.length - 1];\n        if (currentTurn.moves.length > 0) {\n          return {\n            ...state\n          };\n        }\n        const prevTurn = state.turns[state.turns.length - 2];\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -2),\n            {\n              ...prevTurn,\n              moves: []\n            }\n          ]\n        };\n      }\n      return {\n        ...state,\n        turns: [\n          {\n            player: Player.WHITE,\n            moves: []\n          }\n        ]\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Field } from '../../game/def';\nimport { Action } from '../index';\n\nexport const REVERT_MOVE = '@lineball/REVERT_MOVE';\nexport const REVERT_TURN = '@lineball/REVERT_TURN';\nexport const ADD_MOVE = '@lineball/ADD_MOVE';\n\nexport interface AddMoveAction extends Action {\n  payload: Field;\n}\n\nexport const addMove = (field: Field): AddMoveAction => {\n  const payload: Field = field;\n  return {\n    type: ADD_MOVE,\n    payload\n  };\n};\n\nexport const revertMove = (): Action => ({\n  type: REVERT_MOVE\n});\n\nexport const revertTurn = (): Action => ({\n  type: REVERT_TURN\n});\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Global = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: white;\n  background-color: #282c34;\n}\n\na:any-link {\n  color: inherit;\n  text-decoration: none;\n}\n\n#root,\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  overflow: hidden;\n}\n`;\n\nexport const AppContainer = styled.div`\n  max-width: 960px;\n  margin: auto;\n  overflow-y: auto;\n  height: 100vh;\n`;\n\nexport const FullPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const colors = {\n  background: '#282c34',\n  logo: ['#ff0', '#f00', '#aaa', '#fff']\n};\n\nexport default {\n  AppContainer\n};\n","import React, { ReactElement, useEffect, useRef, useState } from 'react';\nimport { animated, useChain, useSpring } from 'react-spring';\nimport styled from 'styled-components';\nimport { colors as styleColors } from '../styles';\nimport { uniqueId } from 'lodash';\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst LogoContainer = styled.div`\n  flex: 0;\n  z-index: 1;\n`;\n\ntype Props = {\n  toggle?: boolean;\n  onAnimationFinish?: () => void;\n  width?: number | string;\n  colors: [string, string, string, string];\n};\nconst Logo = ({ toggle, onAnimationFinish, width, colors }: Props): ReactElement => {\n  const [id, setId] = useState<string | null>(null);\n  useEffect((): void => setId(uniqueId('_logo_svg_')), []);\n\n  const farTrailRef = useRef(null);\n  const farTrailProps = useSpring({\n    from: { y: toggle ? 0 : -394 },\n    to: { y: toggle ? 394 : 0 },\n    ref: farTrailRef\n  });\n\n  const closeTrailRef = useRef(null);\n  const closeTrailProps = useSpring({\n    from: { y: toggle ? 0 : 394 },\n    to: { y: toggle ? -394 : 0 },\n    ref: closeTrailRef\n  });\n\n  const ballRef = useRef(null);\n  const ballProps = useSpring({\n    from: {\n      fillOpacity: toggle ? 1 : 0\n    },\n    to: {\n      fillOpacity: toggle ? 0 : 1\n    },\n    onRest: onAnimationFinish,\n    ref: ballRef\n  });\n\n  useChain(\n    [{ current: farTrailRef.current }, { current: closeTrailRef.current }, { current: ballRef.current }],\n    toggle ? [0, 0.48, 0.48] : [0, 0.38, 0.6]\n  );\n\n  return (\n    <Wrapper>\n      <LogoContainer>\n        <animated.svg viewBox=\"-1 -1 645 394\" width={width}>\n          <defs>\n            <linearGradient id={`grad1${id}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[0]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[1]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id={`grad2${id}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[1]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[0]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id={`grad3${id}`} x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[2]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[3]} stopOpacity=\"1\" />\n            </linearGradient>\n            <mask id={`farTrailMask${id}`} maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"394\" fill=\"white\" style={farTrailProps} />\n            </mask>\n            <mask id={`closeTrailAndBallMask${id}`} maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"420\" fill=\"white\" style={closeTrailProps} y=\"394\" />\n            </mask>\n          </defs>\n          <path\n            id={`far-trail${id}`}\n            d=\"M437.5 390C419.5 390 276 390 258 390C229.5 334 194 276.5 151 217C108 157.5 57.5 96 0 32.5C91 87.5 173.5 145 246.5 204.5C319.5 264.5 383 326 437.5 390Z\"\n            mask={`url(#farTrailMask${id})`}\n            fill={`url(#grad2${id})`}\n          />\n          <path\n            id={`close-trail${id}`}\n            d=\"M335.9 234C364.5 184.5 394.5 140 426 100C433 137.5 447.5 166 470 185C492 204 518.5 212.5 550 211.5C527 235 505 261.5 483.5 291C462 320.5 446.5 353.5 437.5 390L257.5 390C281 335.5 307.5 283.5 336 234Z\"\n            mask={`url(#closeTrailAndBallMask${id})`}\n            fill={`url(#grad1${id})`}\n          />\n          <animated.path\n            id={`ball${id}`}\n            d=\"M540 200C484.81 200 440 155.17 440 100C440 44.81 484.81 0 540 0C595.19 0 640 44.81 640 100C640 155.17 595.19 200 540 200Z\"\n            fill={`url(#grad3${id})`}\n            fillOpacity=\"0\"\n            style={ballProps}\n          />\n        </animated.svg>\n      </LogoContainer>\n    </Wrapper>\n  );\n};\n\nLogo.defaultProps = {\n  toggle: false,\n  onAnimationFinish: (): void => {},\n  width: 400,\n  colors: styleColors.logo\n};\n\nexport default Logo;\n","import React, { ReactElement, useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport styled from 'styled-components';\nimport Logo from './Logo';\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 100vh;\n`;\n\ntype Props = {\n  onAnimationFinish: () => void;\n};\n\nconst Loading = ({ onAnimationFinish }: Props): ReactElement => {\n  const [toggle, setToggle] = useState(false);\n\n  const textProps = useSpring({\n    from: {\n      opacity: toggle ? 1 : 0\n    },\n    to: {\n      opacity: toggle ? 0 : 1\n    }\n  });\n\n  return (\n    <Wrapper>\n      <Logo\n        key=\"loading\"\n        onAnimationFinish={toggle ? onAnimationFinish : (): void => setToggle(true)}\n        toggle={toggle}\n      />\n      <animated.div style={textProps}>{toggle ? 'loaded :)' : 'loading...'}</animated.div>\n    </Wrapper>\n  );\n};\n\nexport default Loading;\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst Styled = styled.div`\n  position: absolute;\n  top: 5vh;\n  right: 5vh;\n  background-color: white;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  padding: 1rem;\n  transition: 100ms;\n`;\n\nconst UserName = styled.span``;\nconst MenuIcon = styled.span`\n  :before {\n    content: 'X';\n  }\n  :hover {\n    color: red;\n  }\n  padding-left: 3rem;\n  padding-right: 1rem;\n`;\n\ntype Props = {\n  setMenuOpen: () => void;\n};\n\nconst UpperMenu = ({ setMenuOpen }: Props): ReactElement => (\n  <Styled>\n    <UserName>User</UserName>\n    {setMenuOpen && <MenuIcon onClick={setMenuOpen} />}\n  </Styled>\n);\n\nexport default UpperMenu;\n","import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst StyledMenuItem = styled.div`\n  padding: 10px;\n  background: white;\n  color: ${colors.background};\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 3rem;\n  transition: 100ms;\n  :hover {\n    color: red;\n  }\n`;\ntype Props = {\n  path: string;\n  label: string;\n  onClick: () => void;\n};\n\nconst MenuItem = ({ path, label, onClick }: Props): ReactElement => {\n  return (\n    <StyledMenuItem>\n      <Link to={path} onClick={onClick}>\n        {label}\n      </Link>\n    </StyledMenuItem>\n  );\n};\n\nexport default MenuItem;\n","import React, { ReactElement, useMemo } from 'react';\nimport MenuItem from './MenuItem';\nimport styled from 'styled-components';\nimport { animated, useTrail } from 'react-spring';\nimport { colors } from '../styles';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { Location } from 'history';\n\nconst Styled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  //transform: rotate(-5deg) skew(-5deg);\n  width: 40vw;\n  position: absolute;\n  bottom: 5vh;\n  right: 0;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  overflow: hidden;\n`;\n\nconst menuItems = [\n  { label: 'Home', path: '/' },\n  { label: 'Game', path: '/game' },\n  { label: 'Settings', path: '/settings' }\n];\n\ntype InnerProps = {\n  hideMenu: () => void;\n  location: Location;\n};\ntype Props = InnerProps & RouteComponentProps;\n\nconst LowerMenu = ({ hideMenu, location }: Props): ReactElement => {\n  const currentMenuItems = useMemo(\n    (): typeof menuItems => menuItems.filter((x): boolean => x.path !== location.pathname),\n    []\n  );\n  const trail = useTrail(currentMenuItems.length, {\n    opacity: 1,\n    x: 0,\n    from: { opacity: 0, x: 380 }\n  });\n  return (\n    <Styled>\n      {trail.map(\n        ({ x, ...style }, index): ReactElement => (\n          <animated.div\n            key={currentMenuItems[index].label}\n            style={{ transform: x.interpolate((n): string => `translate3d(${n}px,0,0)`), marginRight: x, ...style }}\n          >\n            <MenuItem {...currentMenuItems[index]} onClick={hideMenu} />\n          </animated.div>\n        )\n      )}\n    </Styled>\n  );\n};\n\nexport default withRouter(LowerMenu);\n","import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Logo from './Logo';\n\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 5vh;\n  left: 5vw;\n  padding: 10px;\n  margin: auto;\n`;\n\nconst NavigationLogo = (): ReactElement => (\n  <LogoContainer>\n    <Logo key=\"navigation\" width=\"80px\" colors={['gray', 'white', 'white', 'gray']} />\n  </LogoContainer>\n);\nexport default NavigationLogo;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport UpperMenu from './UpperMenu';\nimport LowerMenu from './LowerMenu';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport NavigationLogo from '../logo/NavigationLogo';\n\nconst Shade = styled.div`\n  background: black;\n  position: absolute;\n  z-index: 97;\n  height: 100vh;\n  width: 100vw;\n  opacity: 0.7;\n`;\n\ntype InnerProps = {\n  location: Location;\n};\n\ntype Props = InnerProps & RouteComponentProps;\n\nconst Navigation = ({ location }: Props): ReactElement => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isHome = location.pathname === '/';\n  useEffect((): void => {\n    if (isHome) setMenuOpen(true);\n  }, [isHome]);\n  return (\n    <>\n      {!isHome && <NavigationLogo />}\n      <UpperMenu setMenuOpen={(): void => setMenuOpen((x): boolean => !x)} />\n      {isMenuOpen && (\n        <>\n          <LowerMenu key={location.pathname} hideMenu={(): void => setMenuOpen(false)} />\n          {!isHome && <Shade />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React, { memo, ReactElement, useMemo } from 'react';\nimport { Path, Position } from '../def';\nimport { getSVGPosition } from '../util';\n\ntype Props = {\n  color?: string;\n  path: Path;\n};\n\nconst Line = ({ color = 'white', path }: Props): ReactElement => {\n  const { x: x1, y: y1 } = useMemo((): Position => getSVGPosition(path[0].position), path);\n  const { x: x2, y: y2 } = useMemo((): Position => getSVGPosition(path[1].position), path);\n  return <line pointerEvents=\"none\" x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} />;\n};\n\nexport default memo(Line);\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addMove as addMoveAction, AddMoveAction } from '../store/game/actions';\nimport { Field, Position } from './def';\nimport { getSVGPosition } from './util';\nimport { getCurrentField, getPossibleMoveFields } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface ComponentProps {\n  position: Position;\n  field: Field;\n}\n\ninterface StateProps {\n  isValidMove: boolean;\n  current: Field;\n}\n\ninterface DispatchProps {\n  addMove: (field: Field) => void;\n}\n\ntype Props = ComponentProps & StateProps & DispatchProps;\n\nconst Dot: FunctionComponent<Props> = ({\n  position: { x, y },\n  current,\n  addMove,\n  field,\n  isValidMove\n}: Props): ReactElement => {\n  const [hover, setHover] = useState(false);\n  const isCurrent = current === field;\n  const { x: svgX, y: svgY } = getSVGPosition({ x, y });\n  return (\n    <>\n      {isValidMove && (\n        <circle\n          onClick={(): void => {\n            setHover(false);\n            addMove(field);\n          }}\n          r=\"4\"\n          fill=\"transparent\"\n          cx={svgX}\n          cy={svgY}\n          onMouseEnter={(): void => setHover(true)}\n          onMouseLeave={(): void => setHover(false)}\n        />\n      )}\n      <circle\n        pointerEvents=\"none\"\n        cx={svgX}\n        cy={svgY}\n        r={hover || isCurrent ? '2' : '0.5'}\n        fill={isCurrent ? 'red' : 'white'}\n      />\n      {hover && isValidMove && <Line path={[current, field]} />}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store, { field }: { field: Field }): StateProps => ({\n  current: getCurrentField(game),\n  isValidMove: getPossibleMoveFields(game).includes(field)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  addMove: (field: Field): AddMoveAction => dispatch(addMoveAction(field))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dot);\n","import React, { ReactElement, ReactNode } from 'react';\nimport Dot from './Dot';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { Field, Move, Path, Player, Size, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface StateProps {\n  size: Size;\n  fields: Field[];\n  moves: Move[];\n  borders: Path[];\n  currentTurn: Turn;\n}\n\ntype Props = StateProps;\n\nconst Board = (props: Props): ReactElement => {\n  const {\n    fields,\n    moves,\n    size: { x, y },\n    borders,\n    currentTurn\n  } = props;\n  return (\n    <svg width={50 * x} height={50 * (y + 1)} viewBox={`0 0 ${10 * x} ${10 * y}`}>\n      {borders.map(\n        (border): ReactNode => (\n          <Line\n            key={getKeyFromPath(border)}\n            path={border}\n            color={currentTurn.player === Player.WHITE ? 'blue' : 'red'}\n          />\n        )\n      )}\n      {moves.map(\n        ({ path }): ReactNode => (\n          <Line key={getKeyFromPath(path)} path={path} />\n        )\n      )}\n      {fields.map(\n        (field): ReactNode => (\n          <Dot {...field} key={`${field.position.x}_${field.position.y}`} field={field} />\n        )\n      )}\n    </svg>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store): StateProps => {\n  const { fields, size, borders } = game;\n  return {\n    fields,\n    moves: getMoves(game),\n    size,\n    borders,\n    currentTurn: getCurrentTurn(game)\n  };\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React, { FunctionComponent, ReactElement, ReactNode } from 'react';\nimport { Action, Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Move, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { Dispatch } from 'redux';\nimport { revertMove as revertMoveAction, revertTurn as revertTurnAction } from '../store/game/actions';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\n\ninterface StateProps {\n  moves: Move[];\n  turn: Turn;\n}\n\ninterface DispatchProps {\n  revertMove: () => void;\n  revertTurn: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst MoveList: FunctionComponent<Props> = ({ moves, revertMove, revertTurn, turn }: Props): ReactElement => (\n  <>\n    <h3>Moves</h3>\n    {turn.moves.length ? (\n      <button\n        type=\"button\"\n        onClick={(): void => {\n          revertMove();\n        }}\n      >\n        revert move\n      </button>\n    ) : (\n      moves.length && (\n        <button\n          type=\"button\"\n          onClick={(): void => {\n            revertTurn();\n          }}\n        >\n          revert turn\n        </button>\n      )\n    )}\n    <ul>\n      {moves.map(\n        (move): ReactNode => (\n          <li key={getKeyFromPath(move.path)}>{JSON.stringify(move)}</li>\n        )\n      )}\n    </ul>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  moves: getMoves(game),\n  turn: getCurrentTurn(game)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  revertMove: (): Action => dispatch(revertMoveAction()),\n  revertTurn: (): Action => dispatch(revertTurnAction())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoveList);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { getCurrentTurn } from '../store/game/selectors';\nimport { Turn } from './def';\n\ninterface StateProps {\n  turn: Turn;\n}\n\nconst TurnInfo: FunctionComponent<StateProps> = ({ turn: { player, moves } }: StateProps): ReactElement => (\n  <>\n    <h3>Turn</h3>\n    <p>player: {player}</p>\n    <p>moves: {JSON.stringify(moves)}</p>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  turn: getCurrentTurn(game)\n});\n\nexport default connect(mapStateToProps)(TurnInfo);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Board from './Board';\nimport MoveList from './MoveList';\nimport TurnInfo from './TurnInfo';\nimport { FullPage } from '../styles';\n\nconst Game: FunctionComponent<{}> = (): ReactElement => {\n  return (\n    <FullPage>\n      <div style={{ maxWidth: 960, marginLeft: '30%', overflowY: 'scroll' }}>\n        <Board />\n        <TurnInfo />\n        <MoveList />\n      </div>\n    </FullPage>\n  );\n};\n\nexport default Game;\n","import React, { ReactElement, useEffect } from 'react';\nimport { FullPage } from '../styles';\nimport { animated, useSpring } from 'react-spring';\nimport Logo from '../logo/Logo';\n\nconst calc = (x: number, y: number): [number, number] => [\n  ((x - window.innerWidth / 2) * 60) / window.innerWidth,\n  ((y - window.innerHeight / 2) * 60) / window.innerHeight\n];\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst transform: any = (x: number, y: number): string => `rotateX(${-y}deg) rotateY(${x}deg)`;\n\ntype SpringValues = {\n  xy: [number, number];\n};\n\nconst Home = (): ReactElement => {\n  const [spring, set] = useSpring((): SpringValues => ({ xy: [0, 0] }));\n\n  useEffect(\n    (): (() => void) => {\n      const handle = ({ clientX, clientY }: MouseEvent): void => set({ xy: calc(clientX, clientY) });\n      window.addEventListener('mousemove', handle);\n      return (): void => {\n        window.removeEventListener('mousemove', handle);\n      };\n    }\n  );\n\n  return (\n    <FullPage>\n      <animated.div style={{ transform: spring.xy.interpolate(transform) }}>\n        <Logo width=\"50vw\" />\n      </animated.div>\n    </FullPage>\n  );\n};\n\nexport default Home;\n","import React, { ReactElement } from 'react';\nimport { FullPage } from '../styles';\n\nconst Settings = (): ReactElement => {\n  return (\n    <FullPage>\n      <div style={{ textAlign: 'center' }}>Settings</div>\n    </FullPage>\n  );\n};\n\nexport default Settings;\n","// /<reference path=\"../node_modules/@types/react/index.d.ts\"/>\nimport React, { ReactNode } from 'react';\nimport Game from './game/Game';\nimport { animated, useTransition } from 'react-spring';\nimport Home from './pages/Home';\nimport Settings from './pages/Settings';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { Location } from 'history';\n\ntype Props = {\n  location: Location;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Content = ({ location }: Props): any => {\n  const transitions = useTransition(location, (l): string => l.pathname, {\n    from: { opacity: 0, transform: 'translate3d(0, 100%,0)', position: 'absolute' },\n    enter: { opacity: 1, transform: 'translate3d(0, 0%,0)', position: 'absolute' },\n    leave: { opacity: 0, transform: 'translate3d(0, -50%,0)', position: 'absolute' }\n  });\n  return transitions.map(\n    ({ item, props, key }): ReactNode => (\n      <animated.div key={key} style={props}>\n        <Switch location={item}>\n          <Route path=\"/game\" component={Game} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </animated.div>\n    )\n  );\n};\n\nexport default withRouter(Content);\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Loading from './logo/Loading';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Global } from './styles';\nimport Navigation from './navigation/Navigation';\nimport Content from './Content';\n\nconst App: FunctionComponent = (): ReactElement => {\n  const [showGame, setShowGame] = useState(false);\n\n  if (!showGame) {\n    return (\n      <>\n        <Global />\n        <Loading onAnimationFinish={(): void => setShowGame(true)} />\n      </>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Global />\n      <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASENAME}>\n        <Navigation />\n        <Content />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
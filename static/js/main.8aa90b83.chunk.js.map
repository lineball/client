{"version":3,"sources":["game/def.ts","game/util.ts","store/game/selectors.ts","game/svg/Line.tsx","game/Dot.tsx","store/game/actions.ts","game/Board.tsx","game/MoveList.tsx","game/TurnInfo.tsx","styles.tsx","game/Game.tsx","store/game/init.ts","store/index.ts","store/game/reducers.ts","logo/Logo.tsx","logo/Loading.tsx","pages/Home.tsx","pages/Settings.tsx","navigation/UpperMenu.tsx","navigation/MenuItem.tsx","navigation/LowerMenu.tsx","logo/NavigationLogo.tsx","navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["Player","getSVGPosition","_ref","x","y","getKeyFromPosition","_ref2","concat","getKeyFromPath","_ref3","_ref4","Object","slicedToArray","a","b","position","getMoves","state","turns","flatMap","turn","moves","getCurrentField","createSelector","fields","length","find","f","Error","path","lastMove","direction","getCurrentTurn","getAllPathsWithCurrentField","paths","currentField","filter","includes","getUsedPathsWithCurrentField","map","getPossibleMoveFields","allPathsWithCurrentField","usedPathsWithCurrentField","difference","memo","_ref$color","color","_useMemo","useMemo","x1","y1","_useMemo2","x2","y2","react_default","createElement","pointerEvents","stroke","connect","game","field","current","isValidMove","dispatch","addMove","type","payload","addMoveAction","_ref$position","_useState","useState","_useState2","hover","setHover","isCurrent","_getSVGPosition","svgX","svgY","Fragment","onClick","r","fill","cx","cy","onMouseEnter","onMouseLeave","svg_Line","size","borders","currentTurn","props","_props$size","width","height","viewBox","border","key","player","WHITE","game_Dot","assign","revertMove","revertTurn","move","JSON","stringify","_ref$turn","Global","createGlobalStyle","_templateObject","FullPage","styled","div","_templateObject2","_templateObject3","colors","yellow","red","Game","style","maxWidth","marginLeft","overflowY","game_Board","game_TurnInfo","game_MoveList","initField","name","String","fromCharCode","initFields","toConsumableArray","range","initBordersAndPaths","partition","_field$position","maybeNearest","pathString","isBehindGatePath","nearestField","_ref5","isBorder","initState","_initBordersAndPaths","_initBordersAndPaths2","initialState","reducers","combineReducers","arguments","undefined","action","thisTurn","objectSpread","p","slice","nextTurn","BLACK","lastTurn","prevTurn","store","createStore","devToolsEnhancer","Wrapper","animated","Logo_templateObject","LogoContainer","Logo_templateObject2","Logo","toggle","onAnimationFinish","farTrailRef","useRef","farTrailProps","useSpring","from","to","ref","closeTrailRef","closeTrailProps","ballRef","ballProps","fillOpacity","onRest","useChain","web","svg","id","offset","stopColor","stopOpacity","maskUnits","rect","d","mask","defaultProps","Loading_templateObject","Loading","setToggle","textProps","opacity","Loading_Wrapper","logo_Logo","calc","window","innerWidth","innerHeight","transform","Home","_useSpring","xy","_useSpring2","set","useEffect","handle","clientX","clientY","addEventListener","removeEventListener","interpolate","Settings","textAlign","Styled","UpperMenu_templateObject","UserName","span","UpperMenu_templateObject2","MenuIcon","UpperMenu_templateObject3","UpperMenu","setMenuOpen","StyledMenuItem","MenuItem_templateObject","MenuItem","label","react_router_dom","LowerMenu_templateObject","menuItems","withRouter","hideMenu","location","currentMenuItems","pathname","trail","useTrail","LowerMenu_Styled","index","objectWithoutProperties","marginRight","navigation_MenuItem","NavigationLogo_templateObject","NavigationLogo","NavigationLogo_LogoContainer","Shade","Navigation_templateObject","isMenuOpen","isHome","logo_NavigationLogo","navigation_UpperMenu","navigation_LowerMenu","ContentWithRouter","useTransition","enter","leave","item","react_router","component","App","showGame","setShowGame","es","basename","process","navigation_Navigation","logo_Loading","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8aa90b83.chunk.js","sourcesContent":["// Lineball - (domain) game interfaces definition\n\nexport interface Size {\n  x: number;\n  y: number;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Field {\n  name: string;\n  position: Position;\n}\n\nexport type Path = [Field, Field];\n\nexport enum Player {\n  WHITE,\n  BLACK\n}\n\nexport interface Move {\n  path: Path;\n  direction: 0 | 1;\n}\n\nexport interface Turn {\n  player: Player;\n  moves: Move[];\n}\n","import { Path, Position } from './def';\n\nexport const getSVGPosition = ({ x, y }: Position): Position => ({\n  x: x * 10 + 5,\n  y: y * 10\n});\n\nexport const getKeyFromPosition = ({ x, y }: Position): string => `${x}_${y}`;\nexport const getKeyFromPath = ([a, b]: Path): string =>\n  `${getKeyFromPosition(a.position)}:${getKeyFromPosition(b.position)}`;\n","import { GameState } from './reducers';\nimport { Field, Move, Path, Turn } from '../../game/def';\nimport { createSelector } from 'reselect';\nimport { difference } from 'lodash';\n\nexport const getMoves = (state: GameState): Move[] => state.turns.flatMap(turn => turn.moves);\nconst getFields = (state: GameState): Field[] => state.fields;\nconst getPaths = (state: GameState): Path[] => state.paths;\nconst getTurns = (state: GameState): Turn[] => state.turns;\n\nexport const getCurrentField = createSelector(\n  [getMoves, getFields],\n  (moves, fields): Field => {\n    if (moves.length === 0) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return find;\n    }\n    if (moves.length === 1) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return moves[0].path[0] === find ? moves[0].path[1] : moves[0].path[0];\n    }\n\n    const lastMove = moves[moves.length - 1];\n    return lastMove.path[lastMove.direction];\n  }\n);\n\nexport const getCurrentTurn = createSelector(\n  [getTurns],\n  turns => {\n    if (!turns.length) {\n      throw new Error('Error getting current turn');\n    }\n    return turns[turns.length - 1];\n  }\n);\n\nexport const getAllPathsWithCurrentField = createSelector(\n  [getCurrentField, getPaths],\n  (currentField, paths) => paths.filter(f => f.includes(currentField))\n);\n\nexport const getUsedPathsWithCurrentField = createSelector(\n  [getMoves, getCurrentField],\n  (moves, currentField) => moves.filter(({ path }) => path.includes(currentField)).map(({ path }) => path)\n);\n\nexport const getPossibleMoveFields = createSelector(\n  [getCurrentField, getAllPathsWithCurrentField, getUsedPathsWithCurrentField],\n  (currentField, allPathsWithCurrentField, usedPathsWithCurrentField) => {\n    return difference(allPathsWithCurrentField, usedPathsWithCurrentField).map(([a, b]) =>\n      a === currentField ? b : a\n    );\n  }\n);\n","import React, { FunctionComponent, memo, ReactElement, useMemo } from 'react';\nimport { Path } from '../def';\nimport { getSVGPosition } from '../util';\n\ninterface Props {\n  color?: string;\n  path: Path;\n}\n\nconst Line: FunctionComponent<Props> = ({ color = 'white', path }: Props): ReactElement => {\n  const { x: x1, y: y1 } = useMemo(() => getSVGPosition(path[0].position), path);\n  const { x: x2, y: y2 } = useMemo(() => getSVGPosition(path[1].position), path);\n  return <line pointerEvents=\"none\" x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} />;\n};\n\nexport default memo(Line);\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addMove as addMoveAction } from '../store/game/actions';\nimport { Field, Position } from './def';\nimport { getSVGPosition } from './util';\nimport { getCurrentField, getPossibleMoveFields } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface ComponentProps {\n  position: Position;\n  field: Field;\n}\n\ninterface StateProps {\n  isValidMove: boolean;\n  current: Field;\n}\n\ninterface DispatchProps {\n  addMove: (field: Field) => void;\n}\n\ntype Props = ComponentProps & StateProps & DispatchProps;\n\nconst Dot: FunctionComponent<Props> = ({\n  position: { x, y },\n  current,\n  addMove,\n  field,\n  isValidMove\n}: Props): ReactElement => {\n  const [hover, setHover] = useState(false);\n  const isCurrent = current === field;\n  const { x: svgX, y: svgY } = getSVGPosition({ x, y });\n  return (\n    <>\n      {isValidMove && (\n        <circle\n          onClick={() => {\n            setHover(false);\n            addMove(field);\n          }}\n          r=\"4\"\n          fill=\"transparent\"\n          cx={svgX}\n          cy={svgY}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        />\n      )}\n      <circle\n        pointerEvents=\"none\"\n        cx={svgX}\n        cy={svgY}\n        r={hover || isCurrent ? '2' : '0.5'}\n        fill={isCurrent ? 'red' : 'white'}\n      />\n      {hover && isValidMove && <Line path={[current, field]} />}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store, { field }: { field: Field }): StateProps => ({\n  current: getCurrentField(game),\n  isValidMove: getPossibleMoveFields(game).includes(field)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  addMove: (field: Field) => dispatch(addMoveAction(field))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dot);\n","import { Field } from '../../game/def';\nimport { Action } from '../index';\n\nexport const REVERT_MOVE = '@lineball/REVERT_MOVE';\nexport const REVERT_TURN = '@lineball/REVERT_TURN';\nexport const ADD_MOVE = '@lineball/ADD_MOVE';\n\nexport interface AddMoveAction extends Action {\n  payload: Field;\n}\n\nexport const addMove = (field: Field): AddMoveAction => {\n  const payload: Field = field;\n  return {\n    type: ADD_MOVE,\n    payload\n  };\n};\n\nexport const revertMove = (): Action => ({\n  type: REVERT_MOVE\n});\n\nexport const revertTurn = (): Action => ({\n  type: REVERT_TURN\n});\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Dot from './Dot';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { Field, Move, Path, Player, Size, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface StateProps {\n  size: Size;\n  fields: Field[];\n  moves: Move[];\n  borders: Path[];\n  currentTurn: Turn;\n}\n\ntype Props = StateProps;\n\nconst Board: FunctionComponent<Props> = (props: Props): ReactElement => {\n  const {\n    fields,\n    moves,\n    size: { x, y },\n    borders,\n    currentTurn\n  } = props;\n  return (\n    <svg width={50 * x} height={50 * (y + 1)} viewBox={`0 0 ${10 * x} ${10 * y}`}>\n      {borders.map(border => (\n        <Line key={getKeyFromPath(border)} path={border} color={currentTurn.player === Player.WHITE ? 'blue' : 'red'} />\n      ))}\n      {moves.map(({ path }) => (\n        <Line key={getKeyFromPath(path)} path={path} />\n      ))}\n      {fields.map(field => (\n        <Dot {...field} key={`${field.position.x}_${field.position.y}`} field={field} />\n      ))}\n    </svg>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store): StateProps => {\n  const { fields, size, borders } = game;\n  return {\n    fields,\n    moves: getMoves(game),\n    size,\n    borders,\n    currentTurn: getCurrentTurn(game)\n  };\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Move, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { Dispatch } from 'redux';\nimport { revertMove as revertMoveAction, revertTurn as revertTurnAction } from '../store/game/actions';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\n\ninterface StateProps {\n  moves: Move[];\n  turn: Turn;\n}\n\ninterface DispatchProps {\n  revertMove: () => void;\n  revertTurn: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst MoveList: FunctionComponent<Props> = ({ moves, revertMove, revertTurn, turn }: Props): ReactElement => (\n  <>\n    <h3>Moves</h3>\n    {turn.moves.length ? (\n      <button\n        type=\"button\"\n        onClick={() => {\n          revertMove();\n        }}\n      >\n        revert move\n      </button>\n    ) : (\n      moves.length && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            revertTurn();\n          }}\n        >\n          revert turn\n        </button>\n      )\n    )}\n    <ul>\n      {moves.map(move => (\n        <li key={getKeyFromPath(move.path)}>{JSON.stringify(move)}</li>\n      ))}\n    </ul>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  moves: getMoves(game),\n  turn: getCurrentTurn(game)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  revertMove: () => dispatch(revertMoveAction()),\n  revertTurn: () => dispatch(revertTurnAction())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoveList);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { getCurrentTurn } from '../store/game/selectors';\nimport { Turn } from './def';\n\ninterface StateProps {\n  turn: Turn;\n}\n\nconst TurnInfo: FunctionComponent<StateProps> = ({ turn: { player, moves } }: StateProps): ReactElement => (\n  <>\n    <h3>Turn</h3>\n    <p>player: {player}</p>\n    <p>moves: {JSON.stringify(moves)}</p>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  turn: getCurrentTurn(game)\n});\n\nexport default connect(mapStateToProps)(TurnInfo);\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Global = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: white;\n  background-color: #282c34;\n}\n\na:any-link {\n  color: inherit;\n  text-decoration: none;\n}\n\n#root,\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  overflow: hidden;\n}\n`;\n\nexport const AppContainer = styled.div`\n  max-width: 960px;\n  margin: auto;\n  overflow-y: auto;\n  height: 100vh;\n`;\n\nexport const FullPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const colors = {\n  background: '#282c34',\n  logo: {\n    yellow: '#ff0',\n    red: '#f00'\n  }\n};\n\nexport default {\n  AppContainer\n};\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Board from './Board';\nimport MoveList from './MoveList';\nimport TurnInfo from './TurnInfo';\nimport { FullPage } from '../styles';\n\nconst Game: FunctionComponent<{}> = (): ReactElement => {\n  return (\n    <FullPage>\n      <div style={{ maxWidth: 960, marginLeft: '30%', overflowY: 'scroll' }}>\n        <Board />\n        <TurnInfo />\n        <MoveList />\n      </div>\n    </FullPage>\n  );\n};\n\nexport default Game;\n","import { GameState } from './reducers';\nimport { flatMap, partition, range } from 'lodash';\nimport { Field, Path, Player, Position, Turn } from '../../game/def';\nimport { getKeyFromPath } from '../../game/util';\n\nconst initField = ({ x, y }: Position): Field => ({\n  name: `${String.fromCharCode(65 + y)}${x}`,\n  position: { x, y }\n});\n\nconst initFields = (): Field[] =>\n  flatMap([\n    ...[0, 12].map(y => range(3, 6).map(x => initField({ x, y }))),\n    ...range(1, 12).map(y => range(0, 9).map(x => initField({ x, y })))\n  ]);\n\nconst isBorder = ([a, b]: [Position, Position]): boolean => {\n  // horizontal\n  if (a.y === b.y) {\n    if ([0, 12].includes(a.y)) {\n      return true;\n    }\n    if ([1, 11].includes(a.y) && (a.x < 3 || a.x >= 5)) {\n      return true;\n    }\n  }\n  // vertical\n  else if (a.x === b.x) {\n    if ([0, 8].includes(a.x)) {\n      return true;\n    }\n    if ([3, 5].includes(a.x) && [0, 11].includes(a.y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isBehindGatePath = (path: Path): boolean => {\n  const pathString = getKeyFromPath(path);\n  return ['5_0:6_1', '3_0:2_1', '6_11:5_12', '2_11:3_12'].includes(pathString);\n};\n\nconst initBordersAndPaths = (fields: Field[]): [Path[], Path[]] =>\n  partition(\n    flatMap(\n      fields.map(field => {\n        const { x, y } = field.position;\n        const nearestFieldsWithGreaterPosition = fields.filter(\n          maybeNearest =>\n            (([x, x + 1].includes(maybeNearest.position.x) && [y, y + 1].includes(maybeNearest.position.y)) ||\n              (maybeNearest.position.x === x - 1 && maybeNearest.position.y === y + 1)) &&\n            maybeNearest.name !== field.name &&\n            !isBehindGatePath([field, maybeNearest])\n        );\n        return nearestFieldsWithGreaterPosition.map(nearestField => [field, nearestField] as Path);\n      })\n    ),\n    ([a, b]) => isBorder([a.position, b.position])\n  );\n\nconst initTurns = (): Turn[] => [\n  {\n    player: Player.WHITE,\n    moves: []\n  }\n];\n\nconst initState = (): GameState => {\n  const fields = initFields();\n  const [borders, paths] = initBordersAndPaths(fields);\n  return {\n    fields,\n    paths,\n    borders,\n    turns: initTurns(),\n    size: {\n      x: 9,\n      y: 12\n    }\n  };\n};\nexport const initialState: GameState = initState();\n\nexport const testOnly = {\n  initState,\n  initFields,\n  initBordersAndPaths\n};\n","import { Action as ReduxAction, combineReducers, createStore, Store as ReduxStore } from 'redux';\nimport game, { GameState } from './game/reducers';\n\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nexport interface Store extends ReduxStore {\n  game: GameState;\n}\n\nexport interface Action extends ReduxAction {\n  type: string;\n}\n\nconst reducers = combineReducers({\n  game\n});\n\nconst store: Store = createStore(reducers, devToolsEnhancer({}));\n\nexport default store;\n","import { ADD_MOVE, AddMoveAction, REVERT_MOVE, REVERT_TURN } from './actions';\nimport { Action } from '../index';\nimport { Field, Path, Player, Size, Turn } from '../../game/def';\nimport { initialState } from './init';\nimport { getCurrentField, getCurrentTurn } from './selectors';\n\nexport interface GameState {\n  fields: Field[];\n  size: Size;\n  paths: Path[];\n  borders: Path[];\n  turns: Turn[];\n}\n\nexport default (state: GameState = initialState, action: Action): GameState => {\n  switch (action.type) {\n    case ADD_MOVE: {\n      const { payload: field } = action as AddMoveAction;\n      const currentField = getCurrentField(state);\n      const path = state.paths.find(f => f.includes(field) && f.includes(currentField));\n      if (!path) {\n        throw new Error('Path not found!');\n      }\n      const direction = path[0] === field ? 0 : 1;\n      const thisTurn: Turn = {\n        ...state.turns[state.turns.length - 1],\n        moves: [...state.turns[state.turns.length - 1].moves, { path, direction }]\n      };\n      // is same turn\n      const isSameTurn = !!state.turns\n        .flatMap(turn => turn.moves)\n        .map(move => move.path)\n        .concat(state.borders)\n        .filter((p: Path) => p.includes(field))\n        .map((p: Path) => p).length;\n\n      if (isSameTurn) {\n        return {\n          ...state,\n          turns: [...state.turns.slice(0, -1), thisTurn]\n        };\n      }\n      const nextTurn: Turn = {\n        moves: [],\n        player: getCurrentTurn(state).player === Player.WHITE ? Player.BLACK : Player.WHITE\n      };\n      return {\n        ...state,\n        turns: [...state.turns.slice(0, -1), thisTurn, nextTurn]\n      };\n    }\n    case REVERT_MOVE: {\n      const lastTurn = state.turns[state.turns.length - 1];\n      if (lastTurn.moves.length > 0) {\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -1),\n            {\n              ...lastTurn,\n              moves: [...lastTurn.moves.slice(0, -1)]\n            }\n          ]\n        };\n      }\n      return {\n        ...state\n      };\n    }\n    case REVERT_TURN: {\n      if (state.turns.length > 2) {\n        const currentTurn = state.turns[state.turns.length - 1];\n        if (currentTurn.moves.length > 0) {\n          return {\n            ...state\n          };\n        }\n        const prevTurn = state.turns[state.turns.length - 2];\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -2),\n            {\n              ...prevTurn,\n              moves: []\n            }\n          ]\n        };\n      }\n      return {\n        ...state,\n        turns: [\n          {\n            player: Player.WHITE,\n            moves: []\n          }\n        ]\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { useRef, useState } from 'react';\nimport { useSpring, animated, config, useChain } from 'react-spring';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst LogoContainer = styled.div`\n  flex: 0;\n  z-index: 1;\n`;\n\ntype Props = {\n  toggle?: boolean;\n  onAnimationFinish?: () => void;\n  width?: number | string;\n  colors: [string, string, string, string];\n};\nconst Logo = ({ toggle, onAnimationFinish, width, colors }: Props) => {\n  const farTrailRef = useRef(null);\n  const farTrailProps = useSpring({\n    from: { y: toggle ? 0 : -394 },\n    to: { y: toggle ? 394 : 0 },\n    ref: farTrailRef\n  });\n\n  const closeTrailRef = useRef(null);\n  const closeTrailProps = useSpring({\n    from: { y: toggle ? 0 : 394 },\n    to: { y: toggle ? -394 : 0 },\n    ref: closeTrailRef\n  });\n\n  const ballRef = useRef(null);\n  const ballProps = useSpring({\n    from: {\n      fillOpacity: toggle ? 1 : 0\n    },\n    to: {\n      fillOpacity: toggle ? 0 : 1\n    },\n    onRest: onAnimationFinish,\n    ref: ballRef\n  });\n\n  useChain(\n    toggle ? [farTrailRef, closeTrailRef, { current: ballRef.current }] : [farTrailRef, closeTrailRef, ballRef],\n    toggle ? [0, 0.48, 0.48] : [0, 0.38, 0.6]\n  );\n  return (\n    <Wrapper>\n      <LogoContainer>\n        <animated.svg viewBox=\"-1 -1 645 394\" width={width}>\n          <defs>\n            <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[0]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[1]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id=\"grad2\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[1]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[0]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id=\"grad3\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[2]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[3]} stopOpacity=\"1\" />\n            </linearGradient>\n            <mask id=\"farTrailMask\" maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"394\" fill=\"white\" style={farTrailProps} />\n            </mask>\n            <mask id=\"closeTrailAndBallMask\" maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"420\" fill=\"white\" style={closeTrailProps} y=\"394\" />\n            </mask>\n          </defs>\n          <path\n            id=\"far-trail\"\n            d=\"M437.5 390C419.5 390 276 390 258 390C229.5 334 194 276.5 151 217C108 157.5 57.5 96 0 32.5C91 87.5 173.5 145 246.5 204.5C319.5 264.5 383 326 437.5 390Z\"\n            mask=\"url(#farTrailMask)\"\n            fill=\"url(#grad2)\"\n          />\n          <path\n            id=\"close-trail\"\n            d=\"M335.9 234C364.5 184.5 394.5 140 426 100C433 137.5 447.5 166 470 185C492 204 518.5 212.5 550 211.5C527 235 505 261.5 483.5 291C462 320.5 446.5 353.5 437.5 390L257.5 390C281 335.5 307.5 283.5 336 234Z\"\n            mask=\"url(#closeTrailAndBallMask)\"\n            fill=\"url(#grad1)\"\n          />\n          <animated.path\n            id=\"ball\"\n            d=\"M540 200C484.81 200 440 155.17 440 100C440 44.81 484.81 0 540 0C595.19 0 640 44.81 640 100C640 155.17 595.19 200 540 200Z\"\n            fill=\"url(#grad3)\"\n            fillOpacity=\"0\"\n            style={ballProps}\n          />\n        </animated.svg>\n      </LogoContainer>\n    </Wrapper>\n  );\n};\n\nLogo.defaultProps = {\n  toggle: false,\n  onAnimationFinish: () => null,\n  width: 400,\n  colors: [colors.logo.red, colors.logo.yellow, '#aaa', 'white']\n};\n\nexport default Logo;\n","import React, { useRef, useState } from 'react';\nimport { useSpring, animated, config, useChain } from 'react-spring';\nimport styled from 'styled-components';\nimport Logo from './Logo';\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 100vh;\n`;\n\ninterface Props {\n  onAnimationFinish: () => void;\n}\n\nconst Loading = ({ onAnimationFinish }: Props) => {\n  const [toggle, setToggle] = useState(false);\n\n  const textProps = useSpring({\n    from: {\n      opacity: toggle ? 1 : 0\n    },\n    to: {\n      opacity: toggle ? 0 : 1\n    }\n  });\n\n  return (\n    <Wrapper>\n      <Logo key=\"loading\" onAnimationFinish={toggle ? onAnimationFinish : () => setToggle(true)} toggle={toggle} />\n      <animated.div style={textProps}>{toggle ? 'loaded :)' : 'loading...'}</animated.div>\n    </Wrapper>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from 'react';\nimport { FullPage } from '../styles';\nimport { useSpring, animated } from 'react-spring';\nimport Logo from '../logo/Logo';\n\nconst calc = (x: any, y: any) => [\n  ((x - window.innerWidth / 2) * 60) / window.innerWidth,\n  ((y - window.innerHeight / 2) * 60) / window.innerHeight\n];\n\nconst transform: any = (x: number, y: number) => `rotateX(${-y}deg) rotateY(${x}deg)`;\n\nconst Home = () => {\n  const [props, set] = useSpring(() => ({\n    xy: [0, 0]\n  }));\n\n  useEffect(() => {\n    const handle = ({ clientX: x, clientY: y }: MouseEvent) => set({ xy: calc(x, y) });\n    window.addEventListener('mousemove', handle);\n    return () => {\n      window.removeEventListener('mousemove', handle);\n    };\n  });\n\n  return (\n    <FullPage>\n      <animated.div style={{ transform: props.xy.interpolate(transform) }}>\n        <Logo width=\"50vw\" />\n      </animated.div>\n    </FullPage>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { FullPage } from '../styles';\n\nconst Settings = () => {\n  return (\n    <FullPage>\n      <div style={{ textAlign: 'center' }}>Settings</div>\n    </FullPage>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst Styled = styled.div`\n  position: absolute;\n  top: 5vh;\n  right: 5vh;\n  background-color: white;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  padding: 1rem;\n  transition: 100ms;\n`;\n\nconst UserName = styled.span``;\nconst MenuIcon = styled.span`\n  :before {\n    content: 'X';\n  }\n  :hover {\n    color: red;\n  }\n  padding-left: 3rem;\n  padding-right: 1rem;\n`;\n\nconst UpperMenu = ({ setMenuOpen }: any) => (\n  <Styled>\n    <UserName>%USERNAME%</UserName>\n    {setMenuOpen && <MenuIcon onClick={setMenuOpen} />}\n  </Styled>\n);\n\nexport default UpperMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst StyledMenuItem = styled.div`\n  padding: 10px;\n  background: white;\n  color: ${colors.background};\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 3rem;\n  transition: 100ms;\n  :hover {\n    color: red;\n  }\n`;\ntype Props = {\n  path: string;\n  label: string;\n  onClick: () => void;\n};\n\nconst MenuItem = ({ path, label, onClick }: Props) => {\n  return (\n    <StyledMenuItem>\n      <Link to={path} onClick={onClick}>\n        {label}\n      </Link>\n    </StyledMenuItem>\n  );\n};\n\nexport default MenuItem;\n","import React, { useMemo } from 'react';\nimport MenuItem from './MenuItem';\nimport styled from 'styled-components';\nimport { animated, useTrail } from 'react-spring';\nimport { colors } from '../styles';\nimport { withRouter } from 'react-router';\n\nconst Styled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  //transform: rotate(-5deg) skew(-5deg);\n  width: 40vw;\n  position: absolute;\n  bottom: 5vh;\n  right: 0;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  overflow: hidden;\n`;\n\nconst menuItems = [\n  { label: 'Home', path: '/' },\n  { label: 'Game', path: '/game' },\n  { label: 'Settings', path: '/settings' }\n];\n\nconst LowerMenu = ({ hideMenu, location }: any) => {\n  const currentMenuItems = useMemo(() => menuItems.filter(x => x.path !== location.pathname), []);\n  const trail = useTrail(currentMenuItems.length, {\n    opacity: 1,\n    x: 0,\n    from: { opacity: 0, x: 380 }\n  });\n  return (\n    <Styled>\n      {trail.map(({ x, ...style }, index) => (\n        <animated.div\n          key={currentMenuItems[index].label}\n          style={{ transform: x.interpolate(x => `translate3d(${x}px,0,0)`), marginRight: x, ...style }}\n        >\n          <MenuItem {...currentMenuItems[index]} onClick={hideMenu} />\n        </animated.div>\n      ))}\n    </Styled>\n  );\n};\n\nexport default withRouter(LowerMenu);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from './Logo';\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 5vh;\n  left: 5vw;\n  padding: 10px;\n  margin: auto;\n`;\n\nconst NavigationLogo = () => (\n  <LogoContainer>\n    <Logo key=\"navigation\" width=\"80px\" colors={['gray', 'white', 'white', 'gray']} />\n  </LogoContainer>\n);\nexport default NavigationLogo;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport UpperMenu from './UpperMenu';\nimport LowerMenu from './LowerMenu';\nimport { withRouter } from 'react-router';\nimport Logo from '../logo/Logo';\nimport NavigationLogo from '../logo/NavigationLogo';\n\nconst Shade = styled.div`\n  background: black;\n  position: absolute;\n  z-index: 97;\n  height: 100vh;\n  width: 100vw;\n  opacity: 0.7;\n`;\n\nconst Navigation = ({ location }: any) => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isHome = location.pathname === '/';\n  useEffect(() => {\n    isHome && setMenuOpen(true);\n  }, [isHome]);\n  return (\n    <>\n      {!isHome && <NavigationLogo />}\n      <UpperMenu setMenuOpen={() => setMenuOpen(x => !x)} />\n      {isMenuOpen && (\n        <>\n          <LowerMenu key={location.pathname} hideMenu={() => setMenuOpen(false)} />\n          {!isHome && <Shade />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React, { FunctionComponent, ReactElement, useContext, useState } from 'react';\nimport Game from './game/Game';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Loading from './logo/Loading';\nimport { BrowserRouter, Switch, Route, withRouter } from 'react-router-dom';\nimport Home from './pages/Home';\nimport { Global } from './styles';\nimport Settings from './pages/Settings';\nimport Navigation from './navigation/Navigation';\nimport { animated, useTransition } from 'react-spring';\n\nconst App: FunctionComponent = (): ReactElement => {\n  const [showGame, setShowGame] = useState(false);\n\n  if (!showGame) {\n    return (\n      <>\n        <Global />\n        <Loading onAnimationFinish={() => setShowGame(true)} />\n      </>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Global />\n      <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASENAME}>\n        <Navigation />\n        <ContentWithRouter />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nconst Content: any = ({ location }: any) => {\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: 'translate3d(0, 100%,0)', position: 'absolute' },\n    enter: { opacity: 1, transform: 'translate3d(0, 0%,0)', position: 'absolute' },\n    leave: { opacity: 0, transform: 'translate3d(0, -50%,0)', position: 'absolute' }\n  });\n  return transitions.map(({ item, props, key }) => (\n    <animated.div key={key} style={props}>\n      <Switch location={item}>\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </animated.div>\n  ));\n};\nconst ContentWithRouter = withRouter(Content);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
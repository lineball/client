{"version":3,"sources":["game/util.ts","store/game/selectors.ts","game/Dot.tsx","store/game/actions.ts","game/Board.tsx","game/MoveList.tsx","game/TurnInfo.tsx","game/Game.tsx","styles.tsx","game/def.ts","store/game/init.ts","store/index.ts","store/game/reducers.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getSVGPosition","_ref","x","y","getKeyFromPosition","_ref2","concat","getKeyFromPath","_ref3","_ref4","Object","slicedToArray","a","b","position","getMoves","state","moves","getCurrentField","createSelector","fields","length","find","f","Error","path","lastMove","direction","getCurrentTurn","turns","getPossibleFields","paths","currentField","usedPathsWithCurrentField","filter","includes","map","allPathsWithCurrentField","difference","connect","props","game","current","isValidMove","field","dispatch","addMove","type","payload","_useState","useState","_useState2","hover","setHover","_props$position","isCurrent","_getSVGPosition","svgX","svgY","_getSVGPosition2","svgCX","svgCY","react_default","createElement","Fragment","onClick","r","fill","cx","cy","onMouseEnter","onMouseLeave","pointerEvents","x1","y1","x2","y2","stroke","_ref$game","size","borders","_props$size","width","height","viewBox","border","key","move","_getSVGPosition3","_getSVGPosition4","game_Dot","assign","revertMove","JSON","stringify","turn","_ref$turn","player","Game","game_Board","game_TurnInfo","game_MoveList","Player","AppContainer","styled","div","_templateObject","getField","name","String","fromCharCode","initFields","flatMap","toConsumableArray","range","initBordersAndPaths","partition","_field$position","maybeNearest","pathString","isBehindGatePath","nearestField","_ref5","isBorder","initState","_initBordersAndPaths","_initBordersAndPaths2","WHITE","initialState","reducers","combineReducers","arguments","undefined","action","console","log","objectSpread","slice","store","createStore","devToolsEnhancer","App","es","game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a32097ba.chunk.js","sourcesContent":["import { Path, Position } from './def';\n\nexport const getSVGPosition = ({ x, y }: Position) => ({\n  x: x * 10 + 5,\n  y: y * 10\n});\n\nexport const getKeyFromPosition = ({ x, y }: Position) => `${x}_${y}`;\nexport const getKeyFromPath = ([a, b]: Path) =>\n  `${getKeyFromPosition(a.position)}:${getKeyFromPosition(b.position)}`;\n","import { GameState } from './reducers';\nimport { Field } from '../../game/def';\nimport { createSelector } from 'reselect';\nimport { difference } from 'lodash';\n\nconst getMoves = (state: GameState) => state.moves;\nconst getFields = (state: GameState) => state.fields;\nconst getPaths = (state: GameState) => state.paths;\nconst getTurns = (state: GameState) => state.turns;\n\nexport const getCurrentField = createSelector(\n  [getMoves, getFields],\n  (moves, fields): Field => {\n    if (moves.length === 0) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return find;\n    } else if (moves.length === 1) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return moves[0].path[0] === find ? moves[0].path[1] : moves[0].path[0];\n    }\n\n    const lastMove = moves[moves.length - 1];\n    return lastMove.path[lastMove.direction];\n  }\n);\n\nexport const getCurrentTurn = createSelector(\n  [getTurns],\n  turns => {\n    if (!turns.length) {\n      throw new Error('Error getting current turn');\n    }\n    return turns[turns.length - 1];\n  }\n);\n\nexport const getPossibleFields = createSelector(\n  [getMoves, getCurrentField, getPaths],\n  (moves, currentField, paths) => {\n    const usedPathsWithCurrentField = moves\n      .filter(({ path }) => path.includes(currentField))\n      .map(({ path }) => path);\n    const allPathsWithCurrentField = paths.filter(f =>\n      f.includes(currentField)\n    );\n\n    return difference(allPathsWithCurrentField, usedPathsWithCurrentField).map(\n      ([a, b]) => (a === currentField ? b : a)\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addMove } from '../store/game/actions';\nimport { Field, Position } from './def';\nimport { getSVGPosition } from './util';\nimport { getCurrentField, getPossibleFields } from '../store/game/selectors';\n\ninterface Props {\n  position: Position;\n  current: Field;\n  addMove: (field: Field) => void;\n  field: Field;\n  isValidMove: boolean;\n}\n\nconst Dot = (props: Props) => {\n  const [hover, setHover] = useState(false);\n  const {\n    position: { x, y },\n    current,\n    addMove,\n    field,\n    isValidMove\n  } = props;\n  const isCurrent = current.position.x === x && current.position.y === y;\n  const { x: svgX, y: svgY } = getSVGPosition({ x, y });\n  const { x: svgCX, y: svgCY } = getSVGPosition(current.position);\n  return (\n    <>\n      {isValidMove && (\n        <circle\n          onClick={() => {\n            setHover(false);\n            addMove(field);\n          }}\n          r=\"4\"\n          fill=\"transparent\"\n          cx={svgX}\n          cy={svgY}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        />\n      )}\n      <circle\n        pointerEvents=\"none\"\n        cx={svgX}\n        cy={svgY}\n        r={hover || isCurrent ? '2' : '0.5'}\n        fill={isCurrent ? 'red' : 'white'}\n      />\n      {hover && isValidMove && (\n        <line\n          pointerEvents=\"none\"\n          x1={svgCX}\n          y1={svgCY}\n          x2={svgX}\n          y2={svgY}\n          stroke=\"pink\"\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store, props: Props) => ({\n  current: getCurrentField(game),\n  isValidMove: getPossibleFields(game).includes(props.field)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addMove: (field: Field) => dispatch(addMove(field))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dot);\n","import { Field } from '../../game/def';\nexport const REVERT_MOVE = 'lineball@REVERT_MOVE';\nexport const ADD_MOVE = 'lineball@ADD_MOVE';\n\nexport const addMove = (field: Field) => ({\n  type: ADD_MOVE,\n  payload: field\n});\n\nexport const revertMove = () => ({\n  type: REVERT_MOVE\n});\n","import React from 'react';\nimport Dot from './Dot';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { Move, Size } from './def';\nimport { getSVGPosition } from './util';\n\ninterface Props {\n  size: Size;\n  fields: Array<any>;\n  moves: Array<any>;\n  borders: Array<any>;\n}\n\nconst Board = (props: Props) => {\n  const {\n    fields,\n    moves,\n    size: { x, y },\n    borders\n  } = props;\n  return (\n    <svg\n      width={50 * x}\n      height={50 * (y + 1)}\n      viewBox={`0 0 ${10 * x} ${10 * y}`}\n    >\n      {borders.map(border => {\n        const { x: x1, y: y1 } = getSVGPosition(border[0].position);\n        const { x: x2, y: y2 } = getSVGPosition(border[1].position);\n        return (\n          <line\n            key={`\n              ${x1}\n              ${y1}\n              ${x2}\n              ${y2}\n            `}\n            pointerEvents=\"none\"\n            x1={x1}\n            y1={y1}\n            x2={x2}\n            y2={y2}\n            stroke=\"blue\"\n          />\n        );\n      })}\n      {moves.map((move: Move) => {\n        const { x: x1, y: y1 } = getSVGPosition(move.path[0].position);\n        const { x: x2, y: y2 } = getSVGPosition(move.path[1].position);\n        return (\n          <line\n            key={`\n              ${x1}\n              ${y1}\n              ${x2}\n              ${y2}\n            `}\n            pointerEvents=\"none\"\n            x1={x1}\n            y1={y1}\n            x2={x2}\n            y2={y2}\n            stroke=\"white\"\n          />\n        );\n      })}\n      {fields.map(field => (\n        <Dot\n          {...field}\n          key={`${field.position.x}_${field.position.y}`}\n          field={field}\n        />\n      ))}\n    </svg>\n  );\n};\n\nconst mapStateToProps = ({\n  game: { fields, moves, size, borders }\n}: Store) => ({\n  fields,\n  moves,\n  size,\n  borders\n});\n\nexport default connect(mapStateToProps)(Board);\n","import React from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Move } from './def';\nimport { getKeyFromPath } from './util';\nimport { Dispatch } from 'redux';\nimport { revertMove } from '../store/game/actions';\n\ninterface Props {\n  moves: Array<Move>;\n  revertMove: () => void;\n}\n\nconst MoveList = ({ moves, revertMove }: Props) => (\n  <>\n    <h3>Moves</h3>\n    <button\n      onClick={() => {\n        revertMove();\n      }}\n    >\n      revert\n    </button>\n    <ul>\n      {moves.map(move => (\n        <li key={getKeyFromPath(move.path)}>{JSON.stringify(move)}</li>\n      ))}\n    </ul>\n  </>\n);\n\nconst mapStateToProps = (state: Store) => ({\n  moves: state.game.moves\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  revertMove: () => dispatch(revertMove())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoveList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { getCurrentTurn } from '../store/game/selectors';\nimport { Turn } from './def';\n\ninterface Props {\n  turn: Turn;\n}\n\nconst TurnInfo = ({ turn: { player, moves } }: Props) => (\n  <>\n    <h3>Turn</h3>\n    <p>player: {player}</p>\n    <p>moves: {JSON.stringify(moves)}</p>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store) => ({\n  turn: getCurrentTurn(game)\n});\n\nexport default connect(mapStateToProps)(TurnInfo);\n","import React from 'react';\nimport Board from './Board';\nimport MoveList from './MoveList';\nimport TurnInfo from './TurnInfo';\nconst Game = () => {\n  return (\n    <>\n      <Board />\n      <TurnInfo />\n      <MoveList />\n    </>\n  );\n};\n\nexport default Game;\n","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  max-width: 960px;\n  margin: auto;\n`;\n\nexport default {\n  AppContainer\n};\n","// Lineball - (domain) game interfaces definition\n\nexport interface Size {\n  x: number;\n  y: number;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Field {\n  name: String;\n  position: Position;\n}\n\nexport type Path = [Field, Field];\n\nexport enum Player {\n  WHITE,\n  BLACK\n}\n\nexport interface Move {\n  path: Path;\n  direction: 0 | 1;\n}\n\nexport interface Turn {\n  player: Player;\n  moves: Move[];\n}\n","import { GameState } from './reducers';\nimport { flatMap, partition, range } from 'lodash';\nimport { Field, Move, Path, Player, Position, Turn } from '../../game/def';\nimport { getKeyFromPath } from '../../game/util';\n\nconst getField = ({ x, y }: Position) => ({\n  name: `${String.fromCharCode(65 + y)}${x}`,\n  position: { x, y }\n});\n\nconst initFields = () =>\n  flatMap([\n    ...[0, 12].map(y => range(3, 6).map(x => getField({ x, y }))),\n    ...range(1, 12).map(y => range(0, 9).map(x => getField({ x, y })))\n  ]);\n\nconst isBorder = ([a, b]: [Position, Position]) => {\n  //horizontal\n  if (a.y === b.y) {\n    if ([0, 12].includes(a.y)) {\n      return true;\n    }\n    if ([1, 11].includes(a.y) && (a.x < 3 || a.x >= 5)) {\n      return true;\n    }\n  }\n  //vertical\n  else if (a.x === b.x) {\n    if ([0, 8].includes(a.x)) {\n      return true;\n    }\n    if ([3, 5].includes(a.x) && [0, 11].includes(a.y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isBehindGatePath = (path: Path): boolean => {\n  const pathString = getKeyFromPath(path);\n  return ['5_0:6_1', '3_0:2_1', '6_11:5_12', '2_11:3_12'].includes(pathString);\n};\n\nconst initBordersAndPaths = (fields: Field[]): [Path[], Path[]] =>\n  partition(\n    flatMap(\n      fields.map(field => {\n        const { x, y } = field.position;\n        const nearestFieldsWithGreaterPosition = fields.filter(\n          maybeNearest =>\n            (([x, x + 1].includes(maybeNearest.position.x) &&\n              [y, y + 1].includes(maybeNearest.position.y)) ||\n              (maybeNearest.position.x === x - 1 &&\n                maybeNearest.position.y === y + 1)) &&\n            maybeNearest.name !== field.name &&\n            !isBehindGatePath([field, maybeNearest])\n        );\n        return nearestFieldsWithGreaterPosition.map(\n          nearestField => [field, nearestField] as Path\n        );\n      })\n    ),\n    ([a, b]) => isBorder([a.position, b.position])\n  );\n\nconst initTurns = () => [\n  {\n    player: Player.WHITE,\n    moves: [] as Move[]\n  }\n];\n\nconst initState = (): GameState => {\n  const fields = initFields();\n  const [borders, paths] = initBordersAndPaths(fields);\n  return {\n    fields,\n    paths,\n    borders,\n    moves: [],\n    turns: initTurns(),\n    size: {\n      x: 9,\n      y: 12\n    }\n  };\n};\nexport const initialState: GameState = initState();\n\nexport const _test_ = {\n  initState,\n  initFields,\n  initBordersAndPaths\n};\n","import {\n  Action as ReduxAction,\n  combineReducers,\n  createStore,\n  Store as ReduxStore\n} from 'redux';\nimport game, { GameState } from './game/reducers';\n\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nexport interface Store extends ReduxStore {\n  game: GameState;\n}\n\nexport interface Action extends ReduxAction {\n  type: String;\n  payload: any;\n}\n\nconst reducers = combineReducers({\n  game\n});\n\nconst store: Store = createStore(reducers, devToolsEnhancer({}));\n\nexport default store;\n","import { ADD_MOVE, REVERT_MOVE } from './actions';\nimport { Action } from '../index';\nimport {\n  Field,\n  Move,\n  Path,\n  Player,\n  Position,\n  Size,\n  Turn\n} from '../../game/def';\nimport { initialState } from './init';\nimport { getCurrentField } from './selectors';\nimport { getKeyFromPath } from '../../game/util';\n\nexport interface GameState {\n  fields: Field[];\n  size: Size;\n  paths: Path[];\n  borders: Path[];\n  moves: Move[];\n  turns: Turn[];\n}\n\nexport default (state: GameState = initialState, action: Action): GameState => {\n  switch (action.type) {\n    case ADD_MOVE: {\n      const { payload: field } = action;\n      const currentField = getCurrentField(state);\n      const path = state.paths.find(\n        f => f.includes(field) && f.includes(currentField)\n      );\n\n      if (!path) {\n        throw new Error('Path not found!');\n      }\n      console.log(getKeyFromPath(path));\n      const direction = path[0] === field ? 0 : 1;\n      return {\n        ...state,\n        moves: [...state.moves, { path, direction }]\n      };\n    }\n    case REVERT_MOVE: {\n      return {\n        ...state,\n        moves: state.moves.slice(0, -1)\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Game from './game/Game';\nimport { AppContainer } from './styles';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App: FunctionComponent = (): ReactElement => (\n  <Provider store={store}>\n    <AppContainer>\n      <Game />\n    </AppContainer>\n  </Provider>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n/* eslint-disable */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["game/def.ts","game/util.ts","store/game/init.ts","store/game/selectors.ts","store/index.ts","store/game/reducers.ts","store/game/actions.ts","styles.tsx","logo/Logo.tsx","logo/Loading.tsx","navigation/UpperMenu.tsx","navigation/MenuItem.tsx","navigation/LowerMenu.tsx","logo/NavigationLogo.tsx","navigation/Navigation.tsx","game/svg/Line.tsx","game/Dot.tsx","game/Board.tsx","game/MoveList.tsx","game/TurnInfo.tsx","game/Game.tsx","pages/Home.tsx","pages/Settings.tsx","Content.tsx","App.tsx","index.tsx"],"names":["Player","getSVGPosition","_ref","x","y","getKeyFromPosition","_ref2","concat","getKeyFromPath","_ref3","_ref4","Object","slicedToArray","a","b","position","initField","name","String","fromCharCode","initFields","flatMap","toConsumableArray","map","range","initBordersAndPaths","fields","partition","field","_field$position","filter","maybeNearest","includes","path","pathString","isBehindGatePath","nearestField","_ref5","isBorder","initState","_initBordersAndPaths","_initBordersAndPaths2","borders","paths","turns","player","WHITE","moves","size","initialState","getMoves","state","turn","getCurrentField","createSelector","length","find","f","Error","lastMove","direction","getCurrentTurn","getAllPathsWithCurrentField","currentField","getUsedPathsWithCurrentField","getPossibleMoveFields","allPathsWithCurrentField","usedPathsWithCurrentField","difference","reducers","combineReducers","game","arguments","undefined","action","type","payload","thisTurn","objectSpread","move","p","slice","nextTurn","BLACK","lastTurn","prevTurn","store","createStore","devToolsEnhancer","Global","createGlobalStyle","_templateObject","FullPage","styled","div","_templateObject2","_templateObject3","colors","yellow","red","Wrapper","animated","Logo_templateObject","LogoContainer","Logo_templateObject2","Logo","toggle","onAnimationFinish","width","farTrailRef","useRef","farTrailProps","useSpring","from","to","ref","closeTrailRef","closeTrailProps","ballRef","ballProps","fillOpacity","onRest","useChain","current","react_default","createElement","web","svg","viewBox","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","maskUnits","rect","height","fill","style","d","mask","defaultProps","Loading_templateObject","Loading","_useState","useState","_useState2","setToggle","textProps","opacity","Loading_Wrapper","logo_Logo","key","Styled","UpperMenu_templateObject","UserName","span","UpperMenu_templateObject2","MenuIcon","UpperMenu_templateObject3","UpperMenu","setMenuOpen","onClick","StyledMenuItem","MenuItem_templateObject","MenuItem","label","react_router_dom","LowerMenu_templateObject","menuItems","withRouter","hideMenu","location","currentMenuItems","useMemo","pathname","trail","useTrail","LowerMenu_Styled","index","objectWithoutProperties","transform","interpolate","marginRight","navigation_MenuItem","assign","NavigationLogo_templateObject","NavigationLogo","NavigationLogo_LogoContainer","Shade","Navigation_templateObject","isMenuOpen","isHome","useEffect","Fragment","logo_NavigationLogo","navigation_UpperMenu","navigation_LowerMenu","memo","_ref$color","color","_useMemo","_useMemo2","pointerEvents","stroke","connect","isValidMove","dispatch","addMove","addMoveAction","_ref$position","hover","setHover","isCurrent","_getSVGPosition","svgX","svgY","r","cx","cy","onMouseEnter","onMouseLeave","svg_Line","currentTurn","props","_props$size","border","game_Dot","revertMove","revertTurn","JSON","stringify","_ref$turn","Game","maxWidth","marginLeft","overflowY","game_Board","game_TurnInfo","game_MoveList","calc","window","innerWidth","innerHeight","Home","_useSpring","xy","_useSpring2","set","handle","clientX","clientY","addEventListener","removeEventListener","Settings","textAlign","useTransition","enter","leave","item","react_router","component","App","showGame","setShowGame","es","basename","process","navigation_Navigation","src_Content","logo_Loading","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.12b09832.chunk.js","sourcesContent":["// Lineball - (domain) game interfaces definition\n\nexport interface Size {\n  x: number;\n  y: number;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport interface Field {\n  name: string;\n  position: Position;\n}\n\nexport type Path = [Field, Field];\n\nexport enum Player {\n  WHITE,\n  BLACK\n}\n\nexport interface Move {\n  path: Path;\n  direction: 0 | 1;\n}\n\nexport interface Turn {\n  player: Player;\n  moves: Move[];\n}\n","import { Path, Position } from './def';\n\nexport const getSVGPosition = ({ x, y }: Position): Position => ({\n  x: x * 10 + 5,\n  y: y * 10\n});\n\nexport const getKeyFromPosition = ({ x, y }: Position): string => `${x}_${y}`;\nexport const getKeyFromPath = ([a, b]: Path): string =>\n  `${getKeyFromPosition(a.position)}:${getKeyFromPosition(b.position)}`;\n","import { GameState } from './reducers';\nimport { flatMap, partition, range } from 'lodash';\nimport { Field, Path, Player, Position, Turn } from '../../game/def';\nimport { getKeyFromPath } from '../../game/util';\n\nconst initField = ({ x, y }: Position): Field => ({\n  name: `${String.fromCharCode(65 + y)}${x}`,\n  position: { x, y }\n});\n\nconst initFields = (): Field[] =>\n  flatMap([\n    ...[0, 12].map(y => range(3, 6).map(x => initField({ x, y }))),\n    ...range(1, 12).map(y => range(0, 9).map(x => initField({ x, y })))\n  ]);\n\nconst isBorder = ([a, b]: [Position, Position]): boolean => {\n  // horizontal\n  if (a.y === b.y) {\n    if ([0, 12].includes(a.y)) {\n      return true;\n    }\n    if ([1, 11].includes(a.y) && (a.x < 3 || a.x >= 5)) {\n      return true;\n    }\n  }\n  // vertical\n  else if (a.x === b.x) {\n    if ([0, 8].includes(a.x)) {\n      return true;\n    }\n    if ([3, 5].includes(a.x) && [0, 11].includes(a.y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isBehindGatePath = (path: Path): boolean => {\n  const pathString = getKeyFromPath(path);\n  return ['5_0:6_1', '3_0:2_1', '6_11:5_12', '2_11:3_12'].includes(pathString);\n};\n\nconst initBordersAndPaths = (fields: Field[]): [Path[], Path[]] =>\n  partition(\n    flatMap(\n      fields.map(field => {\n        const { x, y } = field.position;\n        const nearestFieldsWithGreaterPosition = fields.filter(\n          maybeNearest =>\n            (([x, x + 1].includes(maybeNearest.position.x) && [y, y + 1].includes(maybeNearest.position.y)) ||\n              (maybeNearest.position.x === x - 1 && maybeNearest.position.y === y + 1)) &&\n            maybeNearest.name !== field.name &&\n            !isBehindGatePath([field, maybeNearest])\n        );\n        return nearestFieldsWithGreaterPosition.map(nearestField => [field, nearestField] as Path);\n      })\n    ),\n    ([a, b]) => isBorder([a.position, b.position])\n  );\n\nconst initTurns = (): Turn[] => [\n  {\n    player: Player.WHITE,\n    moves: []\n  }\n];\n\nconst initState = (): GameState => {\n  const fields = initFields();\n  const [borders, paths] = initBordersAndPaths(fields);\n  return {\n    fields,\n    paths,\n    borders,\n    turns: initTurns(),\n    size: {\n      x: 9,\n      y: 12\n    }\n  };\n};\nexport const initialState: GameState = initState();\n\nexport const testOnly = {\n  initState,\n  initFields,\n  initBordersAndPaths\n};\n","import { GameState } from './reducers';\nimport { Field, Move, Path, Turn } from '../../game/def';\nimport { createSelector } from 'reselect';\nimport { difference } from 'lodash';\n\nexport const getMoves = (state: GameState): Move[] => state.turns.flatMap(turn => turn.moves);\nconst getFields = (state: GameState): Field[] => state.fields;\nconst getPaths = (state: GameState): Path[] => state.paths;\nconst getTurns = (state: GameState): Turn[] => state.turns;\n\nexport const getCurrentField = createSelector(\n  [getMoves, getFields],\n  (moves, fields): Field => {\n    if (moves.length === 0) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return find;\n    }\n    if (moves.length === 1) {\n      const find = fields.find(f => f.position.x === 4 && f.position.y === 6);\n      if (!find) {\n        throw new Error('Problem with getting last field');\n      }\n      return moves[0].path[0] === find ? moves[0].path[1] : moves[0].path[0];\n    }\n\n    const lastMove = moves[moves.length - 1];\n    return lastMove.path[lastMove.direction];\n  }\n);\n\nexport const getCurrentTurn = createSelector(\n  [getTurns],\n  turns => {\n    if (!turns.length) {\n      throw new Error('Error getting current turn');\n    }\n    return turns[turns.length - 1];\n  }\n);\n\nexport const getAllPathsWithCurrentField = createSelector(\n  [getCurrentField, getPaths],\n  (currentField, paths) => paths.filter(f => f.includes(currentField))\n);\n\nexport const getUsedPathsWithCurrentField = createSelector(\n  [getMoves, getCurrentField],\n  (moves, currentField) => moves.filter(({ path }) => path.includes(currentField)).map(({ path }) => path)\n);\n\nexport const getPossibleMoveFields = createSelector(\n  [getCurrentField, getAllPathsWithCurrentField, getUsedPathsWithCurrentField],\n  (currentField, allPathsWithCurrentField, usedPathsWithCurrentField) => {\n    return difference(allPathsWithCurrentField, usedPathsWithCurrentField).map(([a, b]) =>\n      a === currentField ? b : a\n    );\n  }\n);\n","import { Action as ReduxAction, combineReducers, createStore, Store as ReduxStore } from 'redux';\nimport game, { GameState } from './game/reducers';\n\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\nexport interface Store extends ReduxStore {\n  game: GameState;\n}\n\nexport interface Action extends ReduxAction {\n  type: string;\n}\n\nconst reducers = combineReducers({\n  game\n});\n\nconst store: Store = createStore(reducers, devToolsEnhancer({}));\n\nexport default store;\n","import { ADD_MOVE, AddMoveAction, REVERT_MOVE, REVERT_TURN } from './actions';\nimport { Action } from '../index';\nimport { Field, Path, Player, Size, Turn } from '../../game/def';\nimport { initialState } from './init';\nimport { getCurrentField, getCurrentTurn } from './selectors';\n\nexport interface GameState {\n  fields: Field[];\n  size: Size;\n  paths: Path[];\n  borders: Path[];\n  turns: Turn[];\n}\n\nexport default (state: GameState = initialState, action: Action): GameState => {\n  switch (action.type) {\n    case ADD_MOVE: {\n      const { payload: field } = action as AddMoveAction;\n      const currentField = getCurrentField(state);\n      const path = state.paths.find(f => f.includes(field) && f.includes(currentField));\n      if (!path) {\n        throw new Error('Path not found!');\n      }\n      const direction = path[0] === field ? 0 : 1;\n      const thisTurn: Turn = {\n        ...state.turns[state.turns.length - 1],\n        moves: [...state.turns[state.turns.length - 1].moves, { path, direction }]\n      };\n      // is same turn\n      const isSameTurn = !!state.turns\n        .flatMap(turn => turn.moves)\n        .map(move => move.path)\n        .concat(state.borders)\n        .filter((p: Path) => p.includes(field))\n        .map((p: Path) => p).length;\n\n      if (isSameTurn) {\n        return {\n          ...state,\n          turns: [...state.turns.slice(0, -1), thisTurn]\n        };\n      }\n      const nextTurn: Turn = {\n        moves: [],\n        player: getCurrentTurn(state).player === Player.WHITE ? Player.BLACK : Player.WHITE\n      };\n      return {\n        ...state,\n        turns: [...state.turns.slice(0, -1), thisTurn, nextTurn]\n      };\n    }\n    case REVERT_MOVE: {\n      const lastTurn = state.turns[state.turns.length - 1];\n      if (lastTurn.moves.length > 0) {\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -1),\n            {\n              ...lastTurn,\n              moves: [...lastTurn.moves.slice(0, -1)]\n            }\n          ]\n        };\n      }\n      return {\n        ...state\n      };\n    }\n    case REVERT_TURN: {\n      if (state.turns.length > 2) {\n        const currentTurn = state.turns[state.turns.length - 1];\n        if (currentTurn.moves.length > 0) {\n          return {\n            ...state\n          };\n        }\n        const prevTurn = state.turns[state.turns.length - 2];\n        return {\n          ...state,\n          turns: [\n            ...state.turns.slice(0, -2),\n            {\n              ...prevTurn,\n              moves: []\n            }\n          ]\n        };\n      }\n      return {\n        ...state,\n        turns: [\n          {\n            player: Player.WHITE,\n            moves: []\n          }\n        ]\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Field } from '../../game/def';\nimport { Action } from '../index';\n\nexport const REVERT_MOVE = '@lineball/REVERT_MOVE';\nexport const REVERT_TURN = '@lineball/REVERT_TURN';\nexport const ADD_MOVE = '@lineball/ADD_MOVE';\n\nexport interface AddMoveAction extends Action {\n  payload: Field;\n}\n\nexport const addMove = (field: Field): AddMoveAction => {\n  const payload: Field = field;\n  return {\n    type: ADD_MOVE,\n    payload\n  };\n};\n\nexport const revertMove = (): Action => ({\n  type: REVERT_MOVE\n});\n\nexport const revertTurn = (): Action => ({\n  type: REVERT_TURN\n});\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const Global = createGlobalStyle`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: white;\n  background-color: #282c34;\n}\n\na:any-link {\n  color: inherit;\n  text-decoration: none;\n}\n\n#root,\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  min-height: 100%;\n  min-width: 100%;\n  overflow: hidden;\n}\n`;\n\nexport const AppContainer = styled.div`\n  max-width: 960px;\n  margin: auto;\n  overflow-y: auto;\n  height: 100vh;\n`;\n\nexport const FullPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const colors = {\n  background: '#282c34',\n  logo: {\n    yellow: '#ff0',\n    red: '#f00'\n  }\n};\n\nexport default {\n  AppContainer\n};\n","import React, { useRef, useState } from 'react';\nimport { useSpring, animated, config, useChain } from 'react-spring';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst LogoContainer = styled.div`\n  flex: 0;\n  z-index: 1;\n`;\n\ntype Props = {\n  toggle?: boolean;\n  onAnimationFinish?: () => void;\n  width?: number | string;\n  colors: [string, string, string, string];\n};\nconst Logo = ({ toggle, onAnimationFinish, width, colors }: Props) => {\n  const farTrailRef = useRef(null);\n  const farTrailProps = useSpring({\n    from: { y: toggle ? 0 : -394 },\n    to: { y: toggle ? 394 : 0 },\n    ref: farTrailRef\n  });\n\n  const closeTrailRef = useRef(null);\n  const closeTrailProps = useSpring({\n    from: { y: toggle ? 0 : 394 },\n    to: { y: toggle ? -394 : 0 },\n    ref: closeTrailRef\n  });\n\n  const ballRef = useRef(null);\n  const ballProps = useSpring({\n    from: {\n      fillOpacity: toggle ? 1 : 0\n    },\n    to: {\n      fillOpacity: toggle ? 0 : 1\n    },\n    onRest: onAnimationFinish,\n    ref: ballRef\n  });\n\n  useChain(\n    toggle ? [farTrailRef, closeTrailRef, { current: ballRef.current }] : [farTrailRef, closeTrailRef, ballRef],\n    toggle ? [0, 0.48, 0.48] : [0, 0.38, 0.6]\n  );\n  return (\n    <Wrapper>\n      <LogoContainer>\n        <animated.svg viewBox=\"-1 -1 645 394\" width={width}>\n          <defs>\n            <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[0]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[1]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id=\"grad2\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[1]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[0]} stopOpacity=\"1\" />\n            </linearGradient>\n            <linearGradient id=\"grad3\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor={colors[2]} stopOpacity=\"1\" />\n              <stop offset=\"100%\" stopColor={colors[3]} stopOpacity=\"1\" />\n            </linearGradient>\n            <mask id=\"farTrailMask\" maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"394\" fill=\"white\" style={farTrailProps} />\n            </mask>\n            <mask id=\"closeTrailAndBallMask\" maskUnits=\"userSpaceOnUse\">\n              <animated.rect width=\"645\" height=\"420\" fill=\"white\" style={closeTrailProps} y=\"394\" />\n            </mask>\n          </defs>\n          <path\n            id=\"far-trail\"\n            d=\"M437.5 390C419.5 390 276 390 258 390C229.5 334 194 276.5 151 217C108 157.5 57.5 96 0 32.5C91 87.5 173.5 145 246.5 204.5C319.5 264.5 383 326 437.5 390Z\"\n            mask=\"url(#farTrailMask)\"\n            fill=\"url(#grad2)\"\n          />\n          <path\n            id=\"close-trail\"\n            d=\"M335.9 234C364.5 184.5 394.5 140 426 100C433 137.5 447.5 166 470 185C492 204 518.5 212.5 550 211.5C527 235 505 261.5 483.5 291C462 320.5 446.5 353.5 437.5 390L257.5 390C281 335.5 307.5 283.5 336 234Z\"\n            mask=\"url(#closeTrailAndBallMask)\"\n            fill=\"url(#grad1)\"\n          />\n          <animated.path\n            id=\"ball\"\n            d=\"M540 200C484.81 200 440 155.17 440 100C440 44.81 484.81 0 540 0C595.19 0 640 44.81 640 100C640 155.17 595.19 200 540 200Z\"\n            fill=\"url(#grad3)\"\n            fillOpacity=\"0\"\n            style={ballProps}\n          />\n        </animated.svg>\n      </LogoContainer>\n    </Wrapper>\n  );\n};\n\nLogo.defaultProps = {\n  toggle: false,\n  onAnimationFinish: () => null,\n  width: 400,\n  colors: [colors.logo.red, colors.logo.yellow, '#aaa', 'white']\n};\n\nexport default Logo;\n","import React, { useRef, useState } from 'react';\nimport { useSpring, animated, config, useChain } from 'react-spring';\nimport styled from 'styled-components';\nimport Logo from './Logo';\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  width: 100%;\n\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 100vh;\n`;\n\ninterface Props {\n  onAnimationFinish: () => void;\n}\n\nconst Loading = ({ onAnimationFinish }: Props) => {\n  const [toggle, setToggle] = useState(false);\n\n  const textProps = useSpring({\n    from: {\n      opacity: toggle ? 1 : 0\n    },\n    to: {\n      opacity: toggle ? 0 : 1\n    }\n  });\n\n  return (\n    <Wrapper>\n      <Logo key=\"loading\" onAnimationFinish={toggle ? onAnimationFinish : () => setToggle(true)} toggle={toggle} />\n      <animated.div style={textProps}>{toggle ? 'loaded :)' : 'loading...'}</animated.div>\n    </Wrapper>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst Styled = styled.div`\n  position: absolute;\n  top: 5vh;\n  right: 5vh;\n  background-color: white;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  padding: 1rem;\n  transition: 100ms;\n`;\n\nconst UserName = styled.span``;\nconst MenuIcon = styled.span`\n  :before {\n    content: 'X';\n  }\n  :hover {\n    color: red;\n  }\n  padding-left: 3rem;\n  padding-right: 1rem;\n`;\n\nconst UpperMenu = ({ setMenuOpen }: any) => (\n  <Styled>\n    <UserName>%USERNAME%</UserName>\n    {setMenuOpen && <MenuIcon onClick={setMenuOpen} />}\n  </Styled>\n);\n\nexport default UpperMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { colors } from '../styles';\n\nconst StyledMenuItem = styled.div`\n  padding: 10px;\n  background: white;\n  color: ${colors.background};\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 3rem;\n  transition: 100ms;\n  :hover {\n    color: red;\n  }\n`;\ntype Props = {\n  path: string;\n  label: string;\n  onClick: () => void;\n};\n\nconst MenuItem = ({ path, label, onClick }: Props) => {\n  return (\n    <StyledMenuItem>\n      <Link to={path} onClick={onClick}>\n        {label}\n      </Link>\n    </StyledMenuItem>\n  );\n};\n\nexport default MenuItem;\n","import React, { useMemo } from 'react';\nimport MenuItem from './MenuItem';\nimport styled from 'styled-components';\nimport { animated, useTrail } from 'react-spring';\nimport { colors } from '../styles';\nimport { withRouter } from 'react-router';\n\nconst Styled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  //transform: rotate(-5deg) skew(-5deg);\n  width: 40vw;\n  position: absolute;\n  bottom: 5vh;\n  right: 0;\n  z-index: 99;\n  color: ${colors.background};\n  font-size: 3rem;\n  overflow: hidden;\n`;\n\nconst menuItems = [\n  { label: 'Home', path: '/' },\n  { label: 'Game', path: '/game' },\n  { label: 'Settings', path: '/settings' }\n];\n\nconst LowerMenu = ({ hideMenu, location }: any) => {\n  const currentMenuItems = useMemo(() => menuItems.filter(x => x.path !== location.pathname), []);\n  const trail = useTrail(currentMenuItems.length, {\n    opacity: 1,\n    x: 0,\n    from: { opacity: 0, x: 380 }\n  });\n  return (\n    <Styled>\n      {trail.map(({ x, ...style }, index) => (\n        <animated.div\n          key={currentMenuItems[index].label}\n          style={{ transform: x.interpolate(x => `translate3d(${x}px,0,0)`), marginRight: x, ...style }}\n        >\n          <MenuItem {...currentMenuItems[index]} onClick={hideMenu} />\n        </animated.div>\n      ))}\n    </Styled>\n  );\n};\n\nexport default withRouter(LowerMenu);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from './Logo';\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 5vh;\n  left: 5vw;\n  padding: 10px;\n  margin: auto;\n`;\n\nconst NavigationLogo = () => (\n  <LogoContainer>\n    <Logo key=\"navigation\" width=\"80px\" colors={['gray', 'white', 'white', 'gray']} />\n  </LogoContainer>\n);\nexport default NavigationLogo;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport UpperMenu from './UpperMenu';\nimport LowerMenu from './LowerMenu';\nimport { withRouter } from 'react-router';\nimport Logo from '../logo/Logo';\nimport NavigationLogo from '../logo/NavigationLogo';\n\nconst Shade = styled.div`\n  background: black;\n  position: absolute;\n  z-index: 97;\n  height: 100vh;\n  width: 100vw;\n  opacity: 0.7;\n`;\n\nconst Navigation = ({ location }: any) => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const isHome = location.pathname === '/';\n  useEffect(() => {\n    isHome && setMenuOpen(true);\n  }, [isHome]);\n  return (\n    <>\n      {!isHome && <NavigationLogo />}\n      <UpperMenu setMenuOpen={() => setMenuOpen(x => !x)} />\n      {isMenuOpen && (\n        <>\n          <LowerMenu key={location.pathname} hideMenu={() => setMenuOpen(false)} />\n          {!isHome && <Shade />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Navigation);\n","import React, { FunctionComponent, memo, ReactElement, useMemo } from 'react';\nimport { Path } from '../def';\nimport { getSVGPosition } from '../util';\n\ninterface Props {\n  color?: string;\n  path: Path;\n}\n\nconst Line: FunctionComponent<Props> = ({ color = 'white', path }: Props): ReactElement => {\n  const { x: x1, y: y1 } = useMemo(() => getSVGPosition(path[0].position), path);\n  const { x: x2, y: y2 } = useMemo(() => getSVGPosition(path[1].position), path);\n  return <line pointerEvents=\"none\" x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} />;\n};\n\nexport default memo(Line);\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addMove as addMoveAction } from '../store/game/actions';\nimport { Field, Position } from './def';\nimport { getSVGPosition } from './util';\nimport { getCurrentField, getPossibleMoveFields } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface ComponentProps {\n  position: Position;\n  field: Field;\n}\n\ninterface StateProps {\n  isValidMove: boolean;\n  current: Field;\n}\n\ninterface DispatchProps {\n  addMove: (field: Field) => void;\n}\n\ntype Props = ComponentProps & StateProps & DispatchProps;\n\nconst Dot: FunctionComponent<Props> = ({\n  position: { x, y },\n  current,\n  addMove,\n  field,\n  isValidMove\n}: Props): ReactElement => {\n  const [hover, setHover] = useState(false);\n  const isCurrent = current === field;\n  const { x: svgX, y: svgY } = getSVGPosition({ x, y });\n  return (\n    <>\n      {isValidMove && (\n        <circle\n          onClick={() => {\n            setHover(false);\n            addMove(field);\n          }}\n          r=\"4\"\n          fill=\"transparent\"\n          cx={svgX}\n          cy={svgY}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        />\n      )}\n      <circle\n        pointerEvents=\"none\"\n        cx={svgX}\n        cy={svgY}\n        r={hover || isCurrent ? '2' : '0.5'}\n        fill={isCurrent ? 'red' : 'white'}\n      />\n      {hover && isValidMove && <Line path={[current, field]} />}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store, { field }: { field: Field }): StateProps => ({\n  current: getCurrentField(game),\n  isValidMove: getPossibleMoveFields(game).includes(field)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  addMove: (field: Field) => dispatch(addMoveAction(field))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dot);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Dot from './Dot';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { Field, Move, Path, Player, Size, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\nimport Line from './svg/Line';\n\ninterface StateProps {\n  size: Size;\n  fields: Field[];\n  moves: Move[];\n  borders: Path[];\n  currentTurn: Turn;\n}\n\ntype Props = StateProps;\n\nconst Board: FunctionComponent<Props> = (props: Props): ReactElement => {\n  const {\n    fields,\n    moves,\n    size: { x, y },\n    borders,\n    currentTurn\n  } = props;\n  return (\n    <svg width={50 * x} height={50 * (y + 1)} viewBox={`0 0 ${10 * x} ${10 * y}`}>\n      {borders.map(border => (\n        <Line key={getKeyFromPath(border)} path={border} color={currentTurn.player === Player.WHITE ? 'blue' : 'red'} />\n      ))}\n      {moves.map(({ path }) => (\n        <Line key={getKeyFromPath(path)} path={path} />\n      ))}\n      {fields.map(field => (\n        <Dot {...field} key={`${field.position.x}_${field.position.y}`} field={field} />\n      ))}\n    </svg>\n  );\n};\n\nconst mapStateToProps = ({ game }: Store): StateProps => {\n  const { fields, size, borders } = game;\n  return {\n    fields,\n    moves: getMoves(game),\n    size,\n    borders,\n    currentTurn: getCurrentTurn(game)\n  };\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { Store } from '../store';\nimport { connect } from 'react-redux';\nimport { Move, Turn } from './def';\nimport { getKeyFromPath } from './util';\nimport { Dispatch } from 'redux';\nimport { revertMove as revertMoveAction, revertTurn as revertTurnAction } from '../store/game/actions';\nimport { getCurrentTurn, getMoves } from '../store/game/selectors';\n\ninterface StateProps {\n  moves: Move[];\n  turn: Turn;\n}\n\ninterface DispatchProps {\n  revertMove: () => void;\n  revertTurn: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst MoveList: FunctionComponent<Props> = ({ moves, revertMove, revertTurn, turn }: Props): ReactElement => (\n  <>\n    <h3>Moves</h3>\n    {turn.moves.length ? (\n      <button\n        type=\"button\"\n        onClick={() => {\n          revertMove();\n        }}\n      >\n        revert move\n      </button>\n    ) : (\n      moves.length && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            revertTurn();\n          }}\n        >\n          revert turn\n        </button>\n      )\n    )}\n    <ul>\n      {moves.map(move => (\n        <li key={getKeyFromPath(move.path)}>{JSON.stringify(move)}</li>\n      ))}\n    </ul>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  moves: getMoves(game),\n  turn: getCurrentTurn(game)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  revertMove: () => dispatch(revertMoveAction()),\n  revertTurn: () => dispatch(revertTurnAction())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoveList);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport { connect } from 'react-redux';\nimport { Store } from '../store';\nimport { getCurrentTurn } from '../store/game/selectors';\nimport { Turn } from './def';\n\ninterface StateProps {\n  turn: Turn;\n}\n\nconst TurnInfo: FunctionComponent<StateProps> = ({ turn: { player, moves } }: StateProps): ReactElement => (\n  <>\n    <h3>Turn</h3>\n    <p>player: {player}</p>\n    <p>moves: {JSON.stringify(moves)}</p>\n  </>\n);\n\nconst mapStateToProps = ({ game }: Store): StateProps => ({\n  turn: getCurrentTurn(game)\n});\n\nexport default connect(mapStateToProps)(TurnInfo);\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport Board from './Board';\nimport MoveList from './MoveList';\nimport TurnInfo from './TurnInfo';\nimport { FullPage } from '../styles';\n\nconst Game: FunctionComponent<{}> = (): ReactElement => {\n  return (\n    <FullPage>\n      <div style={{ maxWidth: 960, marginLeft: '30%', overflowY: 'scroll' }}>\n        <Board />\n        <TurnInfo />\n        <MoveList />\n      </div>\n    </FullPage>\n  );\n};\n\nexport default Game;\n","import React, { useEffect } from 'react';\nimport { FullPage } from '../styles';\nimport { useSpring, animated } from 'react-spring';\nimport Logo from '../logo/Logo';\n\nconst calc = (x: any, y: any) => [\n  ((x - window.innerWidth / 2) * 60) / window.innerWidth,\n  ((y - window.innerHeight / 2) * 60) / window.innerHeight\n];\n\nconst transform: any = (x: number, y: number) => `rotateX(${-y}deg) rotateY(${x}deg)`;\n\nconst Home = () => {\n  const [props, set] = useSpring(() => ({\n    xy: [0, 0]\n  }));\n\n  useEffect(() => {\n    const handle = ({ clientX: x, clientY: y }: MouseEvent) => set({ xy: calc(x, y) });\n    window.addEventListener('mousemove', handle);\n    return () => {\n      window.removeEventListener('mousemove', handle);\n    };\n  });\n\n  return (\n    <FullPage>\n      <animated.div style={{ transform: props.xy.interpolate(transform) }}>\n        <Logo width=\"50vw\" />\n      </animated.div>\n    </FullPage>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { FullPage } from '../styles';\n\nconst Settings = () => {\n  return (\n    <FullPage>\n      <div style={{ textAlign: 'center' }}>Settings</div>\n    </FullPage>\n  );\n};\n\nexport default Settings;\n","///<reference path=\"../node_modules/@types/react/index.d.ts\"/>\nimport React, { FunctionComponent, ReactChild, ReactChildren, ReactElement, ReactNode } from 'react';\nimport Game from './game/Game';\nimport { useTransition, animated } from 'react-spring';\nimport Home from './pages/Home';\nimport Settings from './pages/Settings';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\ntype Props = {\n  location: any;\n};\n\nconst Content: FunctionComponent<Props> = ({ location }: Props): any => {\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: 'translate3d(0, 100%,0)', position: 'absolute' },\n    enter: { opacity: 1, transform: 'translate3d(0, 0%,0)', position: 'absolute' },\n    leave: { opacity: 0, transform: 'translate3d(0, -50%,0)', position: 'absolute' }\n  });\n  return transitions.map(({ item, props, key }) => (\n    <animated.div key={key} style={props}>\n      <Switch location={item}>\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </animated.div>\n  ));\n};\n\nexport default withRouter(Content);\n","import React, { FunctionComponent, ReactElement, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Loading from './logo/Loading';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Global } from './styles';\nimport Navigation from './navigation/Navigation';\nimport Content from './Content';\n\nconst App: FunctionComponent = (): ReactElement => {\n  const [showGame, setShowGame] = useState(false);\n\n  if (!showGame) {\n    return (\n      <>\n        <Global />\n        <Loading onAnimationFinish={() => setShowGame(true)} />\n      </>\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Global />\n      <BrowserRouter basename={process.env.REACT_APP_ROUTER_BASENAME}>\n        <Navigation />\n        <Content />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}